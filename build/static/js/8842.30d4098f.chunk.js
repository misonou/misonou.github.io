"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[8842],{8842:function(e,s,n){n.r(s);var r=n(2556);function t(e){const s=Object.assign({h1:"h1",del:"del",p:"p",blockquote:"blockquote",strong:"strong",h2:"h2",pre:"pre",code:"code",a:"a",h3:"h3",ul:"ul",li:"li"},e.components),{Module:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n,{name:"brew-js"}),"\n",(0,r.jsxs)(s.h1,{children:["Persisting states ",(0,r.jsx)(s.del,{children:"v0.5"})]}),"\n",(0,r.jsx)(s.p,{children:"Data can be restored even after leaving and revisit the app in the same tab."}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Important:"})," Session storage has a typical 5MB limitation. Although data is compressed, storing huge data should be avoided."]}),"\n"]}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Important:"})," Although session storage is scoped to the document's origin and is cleared when the tab is closed, do not store critically sensitive data."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{children:"History storage"}),"\n",(0,r.jsx)(s.p,{children:"View states can be persisted through history storage so that when user revisit the app through browser history, the page can be restored ."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"let storage = app.historyStorage.current;\r\nstorage.set('data', {});\n"})}),"\n",(0,r.jsxs)(s.p,{children:["See ",(0,r.jsx)(s.a,{href:"/docs/router/snapshots",children:"Snapshots"}),"."]}),"\n",(0,r.jsx)(s.h3,{children:"Getting for a specific state"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"app.historyStorage.for(stateId)\n"})}),"\n",(0,r.jsxs)(s.h2,{children:["Session storage ",(0,r.jsx)(s.del,{children:"v0.5.3"})]}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Important:"})," Note that an app session is different from a browser session which typically associates to the lifetime of a tab."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"An app session is created for every unique visit to the single-page app, for example from a link. When the page is reloaded, or is restored by going forward or backward in browser history, previous app session is resumed."}),"\n",(0,r.jsxs)(s.p,{children:["App sessions can also be explicitly resumed when ",(0,r.jsx)(s.code,{children:"resume"})," option is specified when configuring the router."]}),"\n",(0,r.jsx)(s.p,{children:"Thus it is most suitable for persisting global states in a single-page app."}),"\n",(0,r.jsxs)(s.h2,{children:["Cache ",(0,r.jsx)(s.del,{children:"v0.5.3"})]}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"app.cache"})," property provides additional storage slot that will persist in the same tab regardless of app sessions."]}),"\n",(0,r.jsx)(s.p,{children:"Thus it is suitable for caching resources (likely from APIs) that do not depends on current session."}),"\n",(0,r.jsx)(s.h2,{children:"Object storage interface"}),"\n",(0,r.jsxs)(s.p,{children:["It is a sub-class of ",(0,r.jsx)(s.code,{children:"Map"})," object, therefore all ",(0,r.jsx)(s.code,{children:"Map"})," method is callable."]}),"\n",(0,r.jsx)(s.h3,{children:"Object and circular references"}),"\n",(0,r.jsx)(s.p,{children:"Object references are maintained and circular references are supported."}),"\n",(0,r.jsx)(s.h3,{children:"Limitations"}),"\n",(0,r.jsx)(s.p,{children:"All limitations with native JSON serialization applies (except for circular references):"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Properties with symbols as keys are not serialized"}),"\n",(0,r.jsx)(s.li,{children:"Properties with functions as values are not serialized"}),"\n",(0,r.jsxs)(s.li,{children:["Date objects are serialized as time strings (because of ",(0,r.jsx)(s.code,{children:"Date.prototype.toJSON"}),")"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"In addition, properties with these values are also ignored, due to commonly large amount of data:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Blob"})," objects"]}),"\n",(0,r.jsx)(s.li,{children:"DOM nodes, i.e. elements and text nodes"}),"\n",(0,r.jsxs)(s.li,{children:["the ",(0,r.jsx)(s.code,{children:"window"})," object"]}),"\n"]}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:"It is recommended to only store strings, numbers and booleans values, as well as objects and arrays containing only these values."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{children:"Persisting nested object"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"let storage = app.historyStorage.current;\r\nlet data = storage.get('data');\r\nlet nested = data.obj;\r\n\r\nnested.a = 1;\r\nstorage.persist(nested);\n"})})]})}s.default=function(e={}){const{wrapper:s}=e.components||{};return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(t,e)})):t(e)}}}]);
//# sourceMappingURL=8842.30d4098f.chunk.js.map