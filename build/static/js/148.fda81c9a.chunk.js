"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[148],{148:function(e,n,r){r.r(n);var t=r(2556);function s(e){const n=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r,{name:"zeta-dom"}),"\n",(0,t.jsx)(n.h1,{children:"runCSSAnimation"}),"\n",(0,t.jsx)(n.p,{children:"One can get notifies when CSS transitions or animations finish."}),"\n",(0,t.jsx)(n.h2,{children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"runCSSAnimation(element, className)\r\nrunCSSAnimation(element, className, callback)\r\nrunCSSAnimation(element, className, removeAfterComplete)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Here CSS transitions or animations is triggered by adding a ",(0,t.jsx)(n.code,{children:"className"})," to an element. Transitions or animations on the element and all its descendants will be listened and be waited for."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"runCSSAnimation(element, className, function () {\r\n    console.log('Animation finished');\r\n});\r\n\r\n// or alternatively use the promise returned\r\nvar promise = runCSSAnimation(element, className);\n"})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(s,e)})):s(e)}}}]);
//# sourceMappingURL=148.fda81c9a.chunk.js.map