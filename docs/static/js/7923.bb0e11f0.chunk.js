"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[7923],{7923:function(e,i,s){s.r(i);var r=s(2556);function l(e){const i=Object.assign({h1:"h1",p:"p",code:"code",a:"a",pre:"pre",h2:"h2",h3:"h3",h4:"h4"},e.components),{Module:s,MemberList:l,Badge:t}=i;return t||n("Badge",!1),t.Optional||n("Badge.Optional",!0),t.ReadOnly||n("Badge.ReadOnly",!0),l||n("MemberList",!0),s||n("Module",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s,{name:"zeta-dom-react"}),"\n",(0,r.jsx)(i.h1,{children:"MultiChoiceField class"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"MultiChoiceField"})," class are not supposed to be instantiate manually. Instead it is used to\r\naugment extra functionalities when used with ",(0,r.jsx)(i.a,{href:":",children:(0,r.jsx)(i.code,{children:"useFormField"})}),"."]}),"\n",(0,r.jsx)(l,{i:"MultiChoiceField"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-tsx",children:'interface CheckboxItem extends ChoiceItem<string> {\r\n    disabled?: boolean;\r\n}\r\n\r\nfunction CheckboxList(props: MultiChoiceFieldProps<CheckboxItem>) {\r\n    const { items, value, error, toggleValue, elementRef } = useFormField(MultiChoiceField, props, []);\r\n    return (\r\n        <div ref={elementRef}>\r\n            <span>{props.label}</span>\r\n            {items.map((v, i) => (\r\n                <label key={i}>\r\n                    <input type="checkbox" checked={value.includes(v.value)} onChange={() => toggleValue(v.value)} />\r\n                    <span>{v.label}</span>\r\n                </label>\r\n            ))}\r\n            {error && props.showErrorMessage !== false &&\r\n                <div className="error">{error}</div>}\r\n        </div>\r\n    );\r\n}\n'})}),"\n",(0,r.jsx)(i.h2,{children:"MultiChoiceFieldProps interface"}),"\n",(0,r.jsx)(l,{i:"MultiChoiceFieldProps",extends:["FormFieldProps"],ip:["items","allowCustomValues"]}),"\n",(0,r.jsx)(i.h3,{children:(0,r.jsx)(i.code,{children:"MultiChoiceFieldProps.items"})}),"\n",(0,r.jsxs)(i.p,{children:["A list of items as choices.\r\nPrimitive values in the list will be normalized as ",(0,r.jsx)(i.a,{href:":",children:(0,r.jsx)(i.code,{children:"ChoiceItem"})}),".\r\nIf not specified, ",(0,r.jsx)(i.code,{children:"allowCustomValues"})," will be set to ",(0,r.jsx)(i.code,{children:"true"}),"."]}),"\n",(0,r.jsx)(i.h3,{children:(0,r.jsx)(i.code,{children:"MultiChoiceFieldProps.allowCustomValues"})}),"\n",(0,r.jsx)(i.p,{children:"Whether values not in the list of items are allowed."}),"\n",(0,r.jsx)(i.h2,{children:"MultiChoiceFieldState interface"}),"\n",(0,r.jsx)(l,{i:"MultiChoiceFieldState",extends:["FormFieldState"],ip:["items"],im:["toggleValue()"]}),"\n",(0,r.jsxs)(i.h3,{children:[(0,r.jsx)(i.code,{children:"MultiChoiceFieldState.items"})," ",(0,r.jsx)(t.ReadOnly,{})]}),"\n",(0,r.jsx)(i.p,{children:"Returns a list of choices as normalized items."}),"\n",(0,r.jsx)(i.h3,{children:(0,r.jsx)(i.code,{children:"MultiChoiceFieldState.toggleValue()"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-javascript",children:"toggleValue(value)\r\ntoggleValue(value, selected)\n"})}),"\n",(0,r.jsx)(i.p,{children:"Toggles the presence of the specified item in the value array associated with the field.\r\nIf the item is already present, the item will be removed; otherwise the item will be added."}),"\n",(0,r.jsx)(i.h3,{children:"Parameters"}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsx)(i.h4,{children:(0,r.jsx)(i.code,{children:"value"})}),(0,r.jsx)(i.p,{children:"Item value."}),(0,r.jsxs)(i.h4,{children:[(0,r.jsx)(i.code,{children:"selected"})," ",(0,r.jsx)(t.Optional,{})]}),(0,r.jsx)(i.p,{children:"If true, the item is added to the array if it is not present; otherwise the item is removed from the array if it is present."})]})]})}function n(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}i.default=function(e={}){const{wrapper:i}=e.components||{};return i?(0,r.jsx)(i,Object.assign({},e,{children:(0,r.jsx)(l,e)})):l(e)}}}]);