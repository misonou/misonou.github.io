"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[9263],{9263:function(e,n,s){s.r(n);var t=s(2556);function i(e){const n=Object.assign({h1:"h1",h2:"h2",h3:"h3",code:"code",p:"p",a:"a",pre:"pre",h4:"h4",ul:"ul",li:"li",strong:"strong"},e.components),{Module:s,ImportHint:i,MemberList:c,VersionTimeline:l,Badge:d}=n;return d||r("Badge",!1),d.Version||r("Badge.Version",!0),i||r("ImportHint",!0),c||r("MemberList",!0),s||r("Module",!0),l||r("VersionTimeline",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s,{name:"brew-js-react"}),"\n",(0,t.jsx)(n.h1,{children:"StatefulMixin class"}),"\n",(0,t.jsx)(i,{name:"StatefulMixin",module:"brew-js-react",require:"StatefulMixin",global:"brew.react.StatefulMixin",expanded:!0}),"\n",(0,t.jsx)(c,{i:"StatefulMixin",extends:["Mixin"],ip:["ref","state"],im:["elements()","onDispose()","initState()","initElement()","mergeState()","onLayoutEffect()","onBeforeUpdate()","clone()"]}),"\n",(0,t.jsx)(n.h2,{children:"Instance properties"}),"\n",(0,t.jsx)(n.h3,{children:(0,t.jsx)(n.code,{children:"StatefulMixin.ref"})}),"\n",(0,t.jsxs)(n.p,{children:["Gets a ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"MixinRef"})})," object that can be passed to child components."]}),"\n",(0,t.jsx)(n.h3,{children:(0,t.jsx)(n.code,{children:"StatefulMixin.state"})}),"\n",(0,t.jsx)(n.p,{children:"Gets a pending state object to store values before element is mounted."}),"\n",(0,t.jsxs)(n.p,{children:["By default, existing values on the actual state object will be overwritten in subsequent update.\r\nTo handle changes, overrides the ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"StatefulMixin.mergeState"})})," method."]}),"\n",(0,t.jsx)(n.h2,{children:"Instance methods"}),"\n",(0,t.jsx)(n.h3,{children:(0,t.jsx)(n.code,{children:"StatefulMixin.clone()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"clone()\n"})}),"\n",(0,t.jsx)(n.h3,{children:(0,t.jsx)(n.code,{children:"StatefulMixin.elements()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"elements()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Gets an array of mounted elements which this mixin has been applied."}),"\n",(0,t.jsx)(n.h3,{children:(0,t.jsx)(n.code,{children:"StatefulMixin.initElement()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"initElement(element, state)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Override this method to initialize resources when the element is first mounted, e.g. attach event listeners."}),"\n",(0,t.jsx)(n.h3,{children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"element"})}),(0,t.jsx)(n.p,{children:"A DOM element."}),(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"state"})}),(0,t.jsx)(n.p,{children:"Persisted state object associated with the element."})]}),"\n",(0,t.jsx)(n.h3,{children:(0,t.jsx)(n.code,{children:"StatefulMixin.initState()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"initState()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Override this method to create state object with initial values."}),"\n",(0,t.jsxs)(n.h3,{children:[(0,t.jsx)(n.code,{children:"StatefulMixin.mergeState()"})," ",(0,t.jsx)(d.Version,{})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"mergeState(element, state, newState)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Override this method to handle state changes.\r\nWhen overriden, new states are required to copied manually to the persisted state object."}),"\n",(0,t.jsx)(n.h3,{children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"element"})}),(0,t.jsx)(n.p,{children:"A DOM element."}),(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"state"})}),(0,t.jsx)(n.p,{children:"Persisted state object associated with the element."}),(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"newState"})}),(0,t.jsxs)(n.p,{children:["New states passed from ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"StatefulMixin.state"})}),"."]})]}),"\n",(0,t.jsx)(n.h3,{children:(0,t.jsx)(n.code,{children:"StatefulMixin.onDispose()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"onDispose(callback)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Registers callback to clean up resources when the host component is unmounted."}),"\n",(0,t.jsx)(n.h3,{children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"callback"})}),(0,t.jsx)(n.p,{children:"A callback."})]}),"\n",(0,t.jsxs)(n.h3,{children:[(0,t.jsx)(n.code,{children:"StatefulMixin.onBeforeUpdate()"})," ",(0,t.jsx)(d.Version,{})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"onBeforeUpdate(element, state)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Override this method to apply changes when element is about to be updated.\r\nIt is analogous to ",(0,t.jsx)(n.code,{children:"getSnapshotBeforeUpdate"})," for a ",(0,t.jsx)(n.code,{children:"React.Component"}),"."]}),"\n",(0,t.jsx)(n.h3,{children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"element"})}),(0,t.jsx)(n.p,{children:"A DOM element."}),(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"state"})}),(0,t.jsx)(n.p,{children:"Persisted state object associated with the element."})]}),"\n",(0,t.jsxs)(n.h3,{children:[(0,t.jsx)(n.code,{children:"StatefulMixin.onLayoutEffect()"})," ",(0,t.jsx)(d.Version,{})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"onLayoutEffect(element, state)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Override this method to apply changes to mounted element."}),"\n",(0,t.jsx)(n.h3,{children:"Parameters"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"element"})}),(0,t.jsx)(n.p,{children:"A DOM element."}),(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"state"})}),(0,t.jsx)(n.p,{children:"Persisted state object associated with the element."})]}),"\n",(0,t.jsx)(n.h2,{children:"Version information"}),"\n",(0,t.jsx)(l,{module:"brew-js-react",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"0.1.0"})," Introduced"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"0.5.0"})," ",(0,t.jsx)(n.code,{children:"onLayoutEffect()"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"0.5.3"})," ",(0,t.jsx)(n.code,{children:"onBeforeUpdate()"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"0.6.0"})," ",(0,t.jsx)(n.code,{children:"mergeState()"})]}),"\n"]})})]})}function r(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(i,e)})):i(e)}}}]);