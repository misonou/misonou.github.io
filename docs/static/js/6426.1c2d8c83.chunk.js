"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[6426],{6426:function(e,n,s){s.r(n);var r=s(2556);function o(e){const n=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3"},e.components),{Module:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s,{name:"zeta-dom-react"}),"\n",(0,r.jsx)(n.h1,{children:"useDispose"}),"\n",(0,r.jsx)(n.p,{children:"Creates a cleanup callback collector."}),"\n",(0,r.jsx)(n.h2,{children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"useDispose()\n"})}),"\n",(0,r.jsx)(n.h3,{children:"Return value"}),"\n",(0,r.jsx)(n.p,{children:"A callback that invokes pushed callbacks."}),"\n",(0,r.jsx)(n.h2,{children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"Callbacks pushed into the queue will be called when the component is unmounted."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"function Component(props) {\r\n    const dispose = useDispose();\r\n    useEffect(() => {\r\n        doSomeWork().then(() => {\r\n            dispose.push(() => console.log('Component unmounted'));\r\n        });\r\n    }, []]);\r\n    /* ... */\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Callbacks can also be called manually by calling the ",(0,r.jsx)(n.code,{children:"DisposeCallback"}),".\r\nExecuted callbacks are removed from the queue so that they will not be called twice."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"function Component(props) {\r\n    const dispose = useDispose();\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            dispose();  // cleanup manually\r\n        }, 1000);\r\n    }, []);\r\n    /* ... */\r\n}\n"})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o(e)}}}]);