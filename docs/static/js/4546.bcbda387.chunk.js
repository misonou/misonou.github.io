"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[4546],{4546:function(e,t,n){n.r(t);var s=n(2556);function r(e){const t=Object.assign({h1:"h1",p:"p",strong:"strong",code:"code"},e.components),{Module:n,WaterpipeExample:r}=t;return n||o("Module",!0),r||o("WaterpipeExample",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n,{name:"waterpipe"}),"\n",(0,s.jsx)(t.h1,{children:"Pipe, statement and template"}),"\n",(0,s.jsx)(t.p,{children:"From a simple waterpipe templating example:"}),"\n",(0,s.jsx)(r,{data:{value:1},template:"\n{{if value odd}}\n    The value is {{value}}\n{{/if}}"}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.strong,{children:"pipe"})," is a single expression that returns data, as ",(0,s.jsx)(t.code,{children:"{{value}}"})," outputs ",(0,s.jsx)(t.code,{children:"1"})," in the above example."]}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.strong,{children:"statement"}),", on the other hand, provides flow controls, like the ",(0,s.jsx)(t.code,{children:"{{if ...}}"})," statement above."]}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.strong,{children:"template"})," consists of one or more pipes or statements, as well as raw output (such as the\r\nphrase ",(0,s.jsx)(t.code,{children:"The value is"})," in the above example)."]})]})}function o(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(e={}){const{wrapper:t}=e.components||{};return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}}}]);