"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[4568],{4568:function(e,n,r){r.r(n),r.d(n,{default:function(){return p}});var o=r(2556),t=r(9357),s=r(2192),a=function(){return a=Object.assign||function(e){for(var n,r=1,o=arguments.length;r<o;r++)for(var t in n=arguments[r])Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e},a.apply(this,arguments)};function c(){var e=(0,t.Gc)("form_key",{name:"John Wig"});return(0,o.jsxs)(t.l0,a({context:e},{children:[(0,o.jsx)(s.oi,{name:"name",label:"Name"}),(0,o.jsxs)(t.Fm,a({name:"phone"},{children:[(0,o.jsx)(s.oi,{name:"countryCode",label:"Country code"}),(0,o.jsx)(s.oi,{name:"phoneNumber",label:"Phone number"})]}))]}))}var i='import { Form, FormObject, useFormContext } from "zeta-dom-react";\r\nimport { TextInput } from "src/components/controls";\r\n\r\nexport default function Component() {\r\n    const form = useFormContext(\'form_key\', {\r\n        name: \'John Wig\'\r\n    });\r\n    return (\r\n        <Form context={form}>\r\n            <TextInput name="name" label="Name" />\r\n            <FormObject name="phone">\r\n                <TextInput name="countryCode" label="Country code" />\r\n                <TextInput name="phoneNumber" label="Phone number" />\r\n            </FormObject>\r\n        </Form>\r\n    );\r\n}\r\n',m=r(9596);function u(){return(0,o.jsx)(m.iV,{component:c,source:{tsx:i},maxHeight:"none"})}function l(e){const n=Object.assign({h1:"h1",p:"p",blockquote:"blockquote",a:"a",code:"code"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r,{name:"zeta-dom-react"}),"\n",(0,o.jsx)(n.h1,{children:"Persisting form in history"}),"\n",(0,o.jsx)(n.p,{children:"It is possible to persist form data in history so that previous data is restored when user navigated back."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Note that restored data, if any, will override initial data passed to ",(0,o.jsx)(n.a,{href:":",children:(0,o.jsx)(n.code,{children:"useFormContext"})}),"."]}),"\n"]}),"\n",(0,o.jsx)(u,{})]})}var p=function(e={}){const{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(l,e)})):l(e)}}}]);