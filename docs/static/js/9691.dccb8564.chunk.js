"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[9691],{9691:function(e,r,n){n.r(r);var s=n(2556);function t(e){const r=Object.assign({h1:"h1",h2:"h2",del:"del",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",p:"p",code:"code",a:"a",pre:"pre",h3:"h3"},e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{children:"Upgrade from previous versions"}),"\n",(0,s.jsxs)(r.h2,{children:["useErrorHandlerMixin ",(0,s.jsx)(r.del,{children:"brew-js-react"})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Deprecated"}),(0,s.jsx)(r.th,{children:"Removed"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"v0.2.8"}),(0,s.jsx)(r.td,{children:"v0.3.0"})]})})]}),"\n",(0,s.jsxs)(r.p,{children:["The deprecated ",(0,s.jsx)(r.code,{children:"useErrorHandlerMixin"})," and ",(0,s.jsx)(r.code,{children:"ErrorHandlerMixin"})," is removed. Use ",(0,s.jsx)(r.a,{href:"https://hackmd.io/@misonou/zeta-dom-react/%2FH4Ay9ZioRB-RuMlU99Geiw",children:(0,s.jsx)(r.code,{children:"useErrorHandler"})})," from ",(0,s.jsx)(r.code,{children:"zeta-dom-react"})," library instead."]}),"\n",(0,s.jsxs)(r.h2,{children:["useFormField(string, ...) ",(0,s.jsx)(r.del,{children:"zeta-dom-react"})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Deprecated"}),(0,s.jsx)(r.th,{children:"Removed"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"v0.3.5"}),(0,s.jsx)(r.td,{children:"-"})]})})]}),"\n",(0,s.jsx)(r.p,{children:"For better tree-shaking of unused code, the field type argument now requires a constructor function."}),"\n",(0,s.jsx)(r.p,{children:"For built-in field type, use the corresponding field type constructor:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"// ---------- old ----------\r\nimport { useFormField } from 'zeta-dom-react';\r\nuseFormField('text', { /* ... */ });\r\nuseFormField('toggle', { /* ... */ });\r\nuseFormField('choice', { /* ... */ });\r\n\r\n// ---------- new ----------\r\nimport { useFormField, TextField, ToggleField, ChoiceField } from 'zeta-dom-react';\r\nuseFormField(TextField, { /* ... */ });\r\nuseFormField(ToggleField, { /* ... */ });\r\nuseFormField(ChoiceField, { /* ... */ });\n"})}),"\n",(0,s.jsxs)(r.p,{children:["To add custom field type, create a constructor function or a class implementing ",(0,s.jsx)(r.code,{children:"FieldType"})," interface:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"// ---------- old ----------\r\nimport { registerFieldType } from 'zeta-dom-react';\r\nregisterFieldType('custom', { /* ... */ });\r\n// use\r\nuseFormField('custom', { /* ... */});\r\n\r\n// ---------- new ----------\r\nclass CustomField implements FieldType<CustomFieldProps, CustomFieldState> {\r\n    valueProperty?: string | undefined;\r\n    isEmpty(value: any): boolean {\r\n        /* ... */\r\n    }\r\n    postHook(state: FormFieldState<any>, props: CustomFieldProps): CustomState {\r\n        /* ... */\r\n    }\r\n}\r\n// use\r\nuseFormField(CustomField, { /* ... */});\n"})}),"\n",(0,s.jsxs)(r.h2,{children:["useErrorHandlerRef ",(0,s.jsx)(r.del,{children:"zeta-dom-react"})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Deprecated"}),(0,s.jsx)(r.th,{children:"Removed"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"v0.3.2"}),(0,s.jsx)(r.td,{children:"-"})]})})]}),"\n",(0,s.jsx)(r.p,{children:"Equivalent to"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"useErrorHandler(source).ref\n"})}),"\n",(0,s.jsxs)(r.h2,{children:["Upgrading to brew.js 0.6.x (Preview changes) ",(0,s.jsx)(r.del,{children:"brew-js"})]}),"\n",(0,s.jsx)(r.h3,{children:"Pure app event"}),"\n",(0,s.jsxs)(r.p,{children:["Event emitted to ",(0,s.jsx)(r.code,{children:"app"})," itself no longer emit to ",(0,s.jsx)(r.code,{children:"<html>"})," element."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"app.emit('event'); // this is treated as pure app event\r\n                   // only event handler registered as app.on('event', handler)\r\n                   // will receive pure app event\n"})}),"\n",(0,s.jsx)(r.p,{children:"I the event is intended to associates with the document root element, explicitly specifies as:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"app.emit('event', document.documentElement);\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Event listener registered to ",(0,s.jsx)(r.code,{children:"app"})," will still receive the event."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"app.on('event', () => {}); // this still works\n"})}),"\n",(0,s.jsx)(r.p,{children:"On the other hand, if you are listening pure app event with target set to, move the target:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"// before\r\napp.on(document.documentElement, 'event', () => {});\r\n// after\r\napp.on('event', () => {});\n"})}),"\n",(0,s.jsxs)(r.h2,{children:["Upgrading to brew.js 0.4.x ",(0,s.jsx)(r.del,{children:"brew-js"})]}),"\n",(0,s.jsx)(r.h3,{children:"Feature moved to HtmlRouter"}),"\n",(0,s.jsxs)(r.p,{children:["When using router with html template, change to ",(0,s.jsx)(r.code,{children:"useHtmlRouter"}),"."]}),"\n",(0,s.jsx)(r.h3,{children:"Loading and error scope"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"loading"})," variable no longer automatically set when asynchronous operation is registered to DOM using ",(0,s.jsx)(r.code,{children:"notifyAsync"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["Add ",(0,s.jsx)(r.code,{children:"loading-scope"})," to ",(0,s.jsx)(r.code,{children:"<html>"})," to enable it."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-htmlembedded!",children:'<html loading-scope set-class="{ loading: loading }">\r\n    ...\r\n</html>\n'})}),"\n",(0,s.jsxs)(r.h2,{children:["Upgrading to brew.js 0.3.x ",(0,s.jsx)(r.del,{children:"brew-js"})]}),"\n",(0,s.jsxs)(r.p,{children:["Starting v0.3, extensions must be loaded by ",(0,s.jsx)(r.code,{children:"brew.with"})," in order to use when using Webpack."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"brew.with(Router)(app => {\r\n});\n"})})]})}r.default=function(e={}){const{wrapper:r}=e.components||{};return r?(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(t,e)})):t(e)}}}]);
//# sourceMappingURL=9691.dccb8564.chunk.js.map