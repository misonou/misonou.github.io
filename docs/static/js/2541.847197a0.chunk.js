"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[2541],{2541:function(e,n,t){t.r(n);var s=t(2556);function r(e){const n=Object.assign({h1:"h1",h2:"h2",pre:"pre",code:"code",h3:"h3",h4:"h4",p:"p"},e.components),{Module:t,MemberList:r,Badge:c}=n;return c||i("Badge",!1),c.Deprecated||i("Badge.Deprecated",!0),c.Optional||i("Badge.Optional",!0),c.ReadOnly||i("Badge.ReadOnly",!0),r||i("MemberList",!0),t||i("Module",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t,{name:"zeta-dom/events"}),"\n",(0,s.jsx)(n.h1,{children:"ZetaEventContainer class"}),"\n",(0,s.jsx)(r,{i:"ZetaEventContainer",ip:["element","context","event","autoDestroy","normalizeTouchEvents","captureDOMEvents"],im:["getContexts()","add()","delete()","destroy()","emit()","emitAsync()","tap()","flushEvents()"]}),"\n",(0,s.jsx)(n.h2,{children:"Constructor"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"new ZetaEventContainer()\r\nnew ZetaEventContainer(root)\r\nnew ZetaEventContainer(root, context)\r\nnew ZetaEventContainer(root, context, options)\n"})}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"root"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsx)(n.p,{children:"A DOM element of which DOM events fired on descedant elements will be captured."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"context"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsxs)(n.p,{children:["An object to be exposed through ",(0,s.jsx)(n.code,{children:"dom.context"})," if the ",(0,s.jsx)(n.code,{children:"captureDOMEvents"})," option is set to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"options"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsx)(n.p,{children:"A dictionary containing options specifying the behavior of the container."}),(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"autoDestroy"})}),(0,s.jsx)(n.p,{children:"Sets whether all event handlers are automatically removed when the root element is detached."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"captureDOMEvents"})}),(0,s.jsxs)(n.p,{children:["Sets whether DOM events will be captured.\r\nIf yes, DOM events will be dispatched to registered components within this container in prior to global event handlers registered by ",(0,s.jsx)(n.code,{children:"dom.on"}),"."]}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"initEvent"})}),(0,s.jsx)(n.p,{children:"Process event object before event is dispatched to handlers registered on this container."})]})]}),"\n",(0,s.jsx)(n.h2,{children:"Instance properties"}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"ZetaEventContainer.autoDestroy"})," ",(0,s.jsx)(c.ReadOnly,{})]}),"\n",(0,s.jsx)(n.p,{children:"Gets whether all event handlers are automatically removed when the root element is detached."}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"ZetaEventContainer.captureDOMEvents"})," ",(0,s.jsx)(c.ReadOnly,{})]}),"\n",(0,s.jsx)(n.p,{children:"Gets whether DOM events will be captured."}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"ZetaEventContainer.context"})," ",(0,s.jsx)(c.ReadOnly,{})]}),"\n",(0,s.jsxs)(n.p,{children:["Gets the public interfacing object exposed through ",(0,s.jsx)(n.code,{children:"dom.context"})," if the ",(0,s.jsx)(n.code,{children:"captureDOMEvents"})," option is set to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"ZetaEventContainer.element"})," ",(0,s.jsx)(c.ReadOnly,{})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the root element this container associates with."}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"ZetaEventContainer.event"})," ",(0,s.jsx)(c.ReadOnly,{})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the event currently being fired within this container."}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"ZetaEventContainer.normalizeTouchEvents"})," ",(0,s.jsx)(c.Deprecated,{})]}),"\n",(0,s.jsx)(n.h2,{children:"Instance methods"}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"ZetaEventContainer.add()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"add(target, handlers)\r\nadd(target, event, handler)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Registers event handlers to a DOM element or a custom event target."}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"target"})}),(0,s.jsx)(n.p,{children:"An event target."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"handlers"})}),(0,s.jsx)(n.p,{children:"An object which each entry represent the handler to be registered on the event."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"event"})}),(0,s.jsx)(n.p,{children:"Name of the event."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"handler"})}),(0,s.jsx)(n.p,{children:"A callback function to be fired when the specified event is triggered."})]}),"\n",(0,s.jsx)(n.h3,{children:"Return value"}),"\n",(0,s.jsx)(n.p,{children:"A function that will unregister the handler when called."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"ZetaEventContainer.delete()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"delete(target)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Removes the DOM element or custom event target from the container.\r\nAll event handlers are also removed."}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"target"})}),(0,s.jsx)(n.p,{children:"An event target."})]}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"ZetaEventContainer.destroy()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"destroy()\n"})}),"\n",(0,s.jsx)(n.p,{children:"Defunct the container. Destroy event will be fired for all registered elements."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"ZetaEventContainer.emit()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"emit(event)\r\nemit(event, target)\r\nemit(event, target, data)\r\nemit(event, target, data, options)\r\nemit(eventName)\r\nemit(eventName, target)\r\nemit(eventName, target, data)\r\nemit(eventName, target, data, options)\r\nemit(eventName, target, props)\r\nemit(eventName, target, props, options)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Re-emits an event to components.\r\nIf the event is handled by component, a promise object is returned."}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"event"})}),(0,s.jsx)(n.p,{children:"An instance of ZetaEvent representing the event to be re-emitted."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"eventName"})}),(0,s.jsx)(n.p,{children:"Event name."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"target"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsx)(n.p,{children:"Event target."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"data"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsx)(n.p,{children:"Any data to be set on ZetaEvent#data property. If an object is given, the properties will be copied to the ZetaEvent object during dispatch."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"props"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsx)(n.p,{children:"Properties that will be copied to the ZetaEvent object during dispatch."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"options"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsxs)(n.p,{children:["Specifies how the event should be emitted. If boolean is given, it specified fills the ",(0,s.jsx)(n.code,{children:"bubbles"})," option."]}),(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"clientX"})}),(0,s.jsx)(n.p,{children:"Specifies x-coordinate of a point on screen associated with the event.\r\nIf specified, only elements at the point will receive the event."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"clientY"})}),(0,s.jsx)(n.p,{children:"Specifies y-coordinate of a point on screen associated with the event.\r\nIf specified, only elements at the point will receive the event."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"bubbles"})}),(0,s.jsx)(n.p,{children:"Specifies if the event should bubble up.\r\nDefault is false."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"handleable"})}),(0,s.jsx)(n.p,{children:"Specifies whether the event can be handled, such that by returning a result value,\r\nsubsequent event handlers would be skipped and the returned value will be passed to\r\nthe caller of the emit function. Default is true."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"asyncResult"})}),(0,s.jsx)(n.p,{children:"Specifies if the emit function should wrap the return value from event handlers as a Promise.\r\nDefault is true."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"source"})}),(0,s.jsxs)(n.p,{children:["Specifies the event source that controls how the event should bubble up, as well as\r\nthe ",(0,s.jsx)(n.code,{children:"source"})," and ",(0,s.jsx)(n.code,{children:"sourceKeyName"})," properties of the event object that would be passed\r\nto event handlers."]}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"originalEvent"})}),(0,s.jsx)(n.p,{children:"Provides a native Event object the event is associated with."})]})]}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"ZetaEventContainer.emitAsync()"})," ",(0,s.jsx)(c.Deprecated,{})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"emitAsync(eventName)\r\nemitAsync(eventName, target)\r\nemitAsync(eventName, target, data)\r\nemitAsync(eventName, target, data, options)\r\nemitAsync(eventName, target, data, options, mergeData)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Emits an event to components asynchronously."}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"eventName"})}),(0,s.jsx)(n.p,{children:"Event name."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"target"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsx)(n.p,{children:"Event target."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"data"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsx)(n.p,{children:"Any data to be set on ZetaEvent#data property. If an object is given, the properties will be copied to the ZetaEvent object during dispatch."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"options"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsxs)(n.p,{children:["Specifies how the event should be emitted. If boolean is given, it specified fills the ",(0,s.jsx)(n.code,{children:"bubbles"})," option."]}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"mergeData"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsx)(n.p,{children:"A callback to aggregates data from the previous undispatched event of the same name on the same target."})]}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"ZetaEventContainer.flushEvents()"})," ",(0,s.jsx)(c.Deprecated,{})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"flushEvents()\n"})}),"\n",(0,s.jsx)(n.p,{children:"Fire scheduled asynchronous events immediately."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"ZetaEventContainer.getContexts()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"getContexts(target)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gets context object associated with the event target."}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"target"})}),(0,s.jsx)(n.p,{children:"An event target, typically a DOM element."})]}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"ZetaEventContainer.tap()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"tap(handler)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Adds a handler to intercept event being fired within this container."}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"handler"})}),(0,s.jsx)(n.p,{children:"An event handler."})]})]})}function i(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}}}]);