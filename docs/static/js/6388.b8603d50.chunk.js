"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[6388],{6388:function(e,n,r){r.r(n);var s=r(2556);function t(e){const n=Object.assign({h1:"h1",h2:"h2",h3:"h3",code:"code",p:"p",del:"del",pre:"pre",h4:"h4",a:"a",ul:"ul",li:"li"},e.components),{Module:r,MemberList:t,Badge:i}=n;return i||o("Badge",!1),i.Optional||o("Badge.Optional",!0),i.ReadOnly||o("Badge.ReadOnly",!0),t||o("MemberList",!0),r||o("Module",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r,{name:"zeta-dom-react"}),"\n",(0,s.jsx)(n.h1,{children:"FormContext class"}),"\n",(0,s.jsx)(t,{i:"FormContext",sp:["ERROR_FIELD","EMPTY_FIELD","formatError"],sm:["get()"],ip:["isValid","data","ref","autoPersist","preventLeave","validateOnChange","enterKeyHint","formatError"],im:["element()","focus()","on()","persist()","restore()","clear()","reset()","getValue()","setValue()","getErrors()","getError()","setError()","validate()","toJSON()"],ev:["dataChange","reset","validate","validationChange"]}),"\n",(0,s.jsx)(n.h2,{children:"Instance properties"}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"FormContext.data"})," ",(0,s.jsx)(i.ReadOnly,{})]}),"\n",(0,s.jsx)(n.p,{children:"Gets a dictionary containing field values."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.isValid"})}),"\n",(0,s.jsx)(n.p,{children:"Returns if all fields have passed validations."}),"\n",(0,s.jsx)(n.h2,{children:"Instance methods"}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.element()"})}),"\n",(0,s.jsx)(n.p,{children:"Retrieves element of a named field."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.focus()"})}),"\n",(0,s.jsx)(n.p,{children:"Focus input control of a named field."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.on()"})}),"\n",(0,s.jsx)(n.p,{children:"Registers event handlers."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.persist()"})}),"\n",(0,s.jsx)(n.p,{children:"Persist form data to view state."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.reset()"})}),"\n",(0,s.jsx)(n.p,{children:"Resets all fields to initial values and clear all validation errors."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.restore()"})}),"\n",(0,s.jsx)(n.p,{children:"Restore form data from view state."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.getError()"})}),"\n",(0,s.jsx)(n.p,{children:"Gets error state on a named field."}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"FormContext.getErrors()"})," ",(0,s.jsx)(n.del,{children:"v0.4.4"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets all validation errors."}),"\n",(0,s.jsxs)(n.p,{children:["It returns an object which each key is the name of an invalid field, and value is the corresponding error; or ",(0,s.jsx)(n.code,{children:"null"})," if there is no error."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// log all errors in console if validation failed\r\nif (!await field.validate()) {\r\n    each(form.getErrors(), (field, error) => {\r\n        console.log(field, error);\r\n    });\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.setError()"})}),"\n",(0,s.jsx)(n.p,{children:"Forces error state on a named field."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.validate()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"form.validate()\r\nform.validate(field0)\r\nform.validate(field0, field1)\r\nform.validate(field0, field1 /* \u2026 ,*/ field1N)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Validates all or specific fields."}),"\n",(0,s.jsx)(n.h4,{children:"Parameters"}),"\n",(0,s.jsx)("dl",{children:(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"field0"})," \u2026 ",(0,s.jsx)(n.code,{children:"fieldN"})," ",(0,s.jsx)(i.Optional,{})]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const form = useFormContext();\r\n\r\nasync function checkAll() {\r\n    let isValid = await form.validate();\r\n}\r\nasync function checkNameAndEmail() {\r\n    let isValid = await form.validate('name', 'email');\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{children:"Static methods"}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"FormContext.get()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"FormContext.get(element)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Retrieve the associated ",(0,s.jsx)(n.code,{children:"FormContext"})," object if a ",(0,s.jsx)(n.code,{children:"<form>"})," element is rendered using ",(0,s.jsx)(n.code,{children:"<Form>"})," component or\r\nmanually assigned ",(0,s.jsx)(n.a,{href:":",children:(0,s.jsx)(n.code,{children:"FormContext.ref"})})," to a ",(0,s.jsx)(n.code,{children:"<form>"})," element."]}),"\n",(0,s.jsx)(n.h4,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"element"})}),(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"<form>"})," element."]})]}),"\n",(0,s.jsx)(n.h4,{children:"Return value"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"FormContext"})," object if the form element is associated to one; ",(0,s.jsx)(n.code,{children:"null"})," otherwise."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Form, useFormContext } from \"zeta-dom-react\";\r\n\r\nfunction MyForm() {\r\n    const form = useFormContext();\r\n    return (\r\n        <Form context={form}>\r\n            <Child />\r\n        </Form>\r\n    );\r\n}\r\n\r\nfunction Child() {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        const formElement = ref.current.closest('form');\r\n        if (formElement) {\r\n            // this can retreive the `FormContext` object\r\n            // created by the parent `<MyForm>` component\r\n            const form = FormContext.get(formElement);\r\n        }\r\n    }, []);\r\n    return (\r\n        <div ref={ref}>{/* ... */}</div>\r\n    );\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{children:"Events"}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"dataChange"})," event"]}),"\n",(0,s.jsx)(n.p,{children:"Allow effects to apply when certain field has changed."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"useEffect(() => {\r\n    return form.on('dataChange', e => {\r\n        if (e.data.includes('item')) {\r\n            /* ... */\r\n        }\r\n    });\r\n}, [form])\n"})}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"reset"})," event"]}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"validate"})," event"]}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"validationChange"})," event"]}),"\n",(0,s.jsx)(n.p,{children:"Deprecated"}),"\n",(0,s.jsx)(n.h2,{children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:":",children:(0,s.jsx)(n.code,{children:"useFormContext"})})}),"\n"]})]})}function o(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(t,e)})):t(e)}}}]);