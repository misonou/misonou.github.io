"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[7901],{7901:function(e,n,r){r.r(n);var i=r(2556),t=r(5522);function s(e){const n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",h2:"h2"},e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.Yl,{name:"brew-js"}),"\n",(0,i.jsx)(n.h1,{children:"Creating app instance"}),"\n",(0,i.jsxs)(n.p,{children:["To initialize the application, the default export function ",(0,i.jsx)(n.code,{children:"brew"})," must be called exactly once in your script's entry point:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import brew from "brew-js/core";\r\n\r\nbrew((app) => {\r\n    // app: Brew.AppInstance<{}>\r\n    // init code, implementing app logic\r\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["To enable extensions, import the extensions and configure them by ",(0,i.jsx)(n.code,{children:"app.use*"})," methods:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import brew from "brew-js/core";\r\nimport Router from "brew-js/extension/router";\r\n\r\n// if you are using TypeScript, add Brew.With* interface to the generic type\r\n// this will mix in the app.use* method\r\nbrew.with(Router)((app) => {\r\n    // the useRouter method is provided by Brew.WithRouter\r\n    app.useRouter({\r\n        // options for the router extension\r\n    });\r\n});\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can also define additional property members and methods on the app instance:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import brew from \"brew-js/core\";\r\n\r\n// if you are using TypeScript, define an interface for your app\r\nconst appContext = {\r\n    myProp: 'myValue'\r\n    myAction() {\r\n         /* do actions */ \r\n    }\r\n};\r\n\r\n// and then init the app with your interface\r\n// this will allow you to define the app members\r\nbrew.with(appContext)((app) => {\r\n\r\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:"After defining the shape of app instance, you can write the HTML template."}),"\n",(0,i.jsx)(n.h2,{children:"Asynchronous init actions"}),"\n",(0,i.jsxs)(n.p,{children:["Postpones ",(0,i.jsx)(n.code,{children:"ready"})," event until the promise is fulfilled.\r\nSome APIs or extensions may implicitly use ",(0,i.jsx)(n.code,{children:"app.beforeInit"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"app.beforeInit(promiseOrCallback): void\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"brew(app => {\r\n    app.beforeInit(() => {\r\n        return new Promise((resolve) => {\r\n            setTimeout(resolve, 1000);\r\n        });\r\n    });\r\n    app.on('ready', () => {\r\n        // this is delayed for 1 second by\r\n        // the promise of beforeInit\r\n    });\r\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Fired when dom is ready and every required asynchronous tasks registered by ",(0,i.jsx)(n.code,{children:"app.beforeInit"})," have completed. First ",(0,i.jsx)(n.code,{children:"navigate"})," event will be followed if router is enabled."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"app.on('ready', callback): void\n"})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(s,e)})):s(e)}}}]);