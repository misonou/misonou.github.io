"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[3781],{3781:function(e,n,r){r.r(n);var t=r(2556);function s(e){const n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",h2:"h2",h4:"h4",del:"del",blockquote:"blockquote",a:"a"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r,{name:"brew-js-react"}),"\n",(0,t.jsx)(n.h1,{children:"Using I18n extension"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"makeTranslation"})," function is provided in conjunction to the i18n extension in brew.js."]}),"\n",(0,t.jsx)(n.p,{children:"The app must setup i18n in order to work:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import brew from \"brew-js-react\";\r\nimport i18n from \"brew-js/extensions/i18n\";\r\n\r\nbrew.with(i18n)(app => {\r\n    app.useI18n({\r\n         languages: ['en', 'de']\r\n    });\r\n});\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"app.useI18n(options)\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Options"}),"\n",(0,t.jsxs)("dl",{children:[(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"languages"})}),(0,t.jsx)(n.p,{children:"A list of available languages."}),(0,t.jsxs)(n.h4,{children:[(0,t.jsx)(n.code,{children:"detectLanguage"})," ",(0,t.jsx)(n.del,{children:"0.4.8"})]}),(0,t.jsxs)(n.p,{children:["Whether to detect language from browser preferences, default is ",(0,t.jsx)(n.code,{children:"true"}),"."]}),(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["For best interoperabilitiy, it is recommended to use standard BCP language code in the ",(0,t.jsx)(n.code,{children:"languages"})," list."]}),"\n"]}),(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"defaultLanguage"})}),(0,t.jsx)(n.h4,{children:(0,t.jsx)(n.code,{children:"routeParam"})}),(0,t.jsxs)(n.p,{children:["When defined, the current language will be reflected on the specified route parameters. Updating either ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"app.language"})})," or ",(0,t.jsx)(n.code,{children:"app.route[routeParam]"})," will cause the other to change."]}),(0,t.jsxs)(n.p,{children:["If the route parameter resolves to a language not defined in the ",(0,t.jsx)(n.code,{children:"languages"})," list, the defafult language will be set instead and will cause the app to redirect to the corresponding path."]}),(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Note that the route parameter will subject to constraints given by the allowed routes. If constraint is needed on route parameter, be sure it matches the available languages."}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{children:"Integration with router"}),"\n",(0,t.jsx)(n.p,{children:"It is common to have (usually) the first path segment to specifiy the language of content being rendered."}),"\n",(0,t.jsx)(n.p,{children:"The i18n module is readily working with the router:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import brew from \"brew-js-react\";\r\nimport i18n from \"brew-js/extensions/i18n\";\r\nimport router from \"brew-js/extensions/router\";\r\n\r\nbrew.with(router, i18n)(app => {\r\n    app.useRouter({\r\n        routes: [\r\n            '/{language:[a-zA-z-]+}/{view}/*',\r\n            '/*'\r\n        ],\r\n        baseUrl: '/'\r\n    });\r\n    app.useI18n({\r\n        languages: ['en', 'de'],\r\n        routeParam: 'language'\r\n    });\r\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the above example, the i18n module will monitor the ",(0,t.jsx)(n.code,{children:"langauge"})," route parameter (the first segment, accessible through ",(0,t.jsx)(n.code,{children:"app.route.language"}),"),\r\nand either set current language (",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"app.language"})}),") to the specified one, or redirects the SPA to a path starting with the allowed default language."]}),"\n",(0,t.jsx)(n.h2,{children:"Listening for language change"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"app.watch('language', (newLanguage) => {\r\n    // ...\r\n});\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Creating translation from JSON"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const resources = {\r\n    // first level are languages\r\n    en: {\r\n        // second level are prefixes\r\n        prefix: { key: 'Translation string' }\r\n    },\r\n    de: {\r\n        prefix: { key: '\xdcbersetzungszeichenfolge' }\r\n    }\r\n};\r\n\r\nconst { translate, useTranslation } = makeTranslation(resources, 'en');\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Now it is ready to ",(0,t.jsx)(n.a,{href:"/docs/react/i18n/getting-translation",children:"get the translations"}),"."]})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(s,e)})):s(e)}}}]);