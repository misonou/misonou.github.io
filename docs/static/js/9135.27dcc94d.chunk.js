"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[9135],{9135:function(e,n,s){s.r(n);var i=s(2556);function r(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",a:"a",h3:"h3",pre:"pre",h4:"h4"},e.components),{Module:s,MemberList:r,Badge:c}=n;return c||o("Badge",!1),c.Optional||o("Badge.Optional",!0),c.ReadOnly||o("Badge.ReadOnly",!0),r||o("MemberList",!0),s||o("Module",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s,{name:"@misonou/brew-extension-auth"}),"\n",(0,i.jsx)(n.h1,{children:"Auth: API reference"}),"\n",(0,i.jsx)(n.h2,{children:"AuthContext interface"}),"\n",(0,i.jsxs)(n.p,{children:["Members of the ",(0,i.jsx)(n.code,{children:"AuthContext"})," interface is injected to app instance by ",(0,i.jsx)(n.a,{href:":",children:(0,i.jsx)(n.code,{children:"app.useAuth"})}),"."]}),"\n",(0,i.jsx)(r,{i:"app",noRoot:!0,ip:["user"],im:["resolveAuthProvider()","acquireToken()","login()","logout()","on()"],ev:["login","logout","sessionEnded"]}),"\n",(0,i.jsxs)(n.h3,{children:[(0,i.jsx)(n.code,{children:"AuthContext.user"})," ",(0,i.jsx)(c.ReadOnly,{})]}),"\n",(0,i.jsxs)(n.p,{children:["Returns an object containing information of current user; or ",(0,i.jsx)(n.code,{children:"null"})," when user is not logged in."]}),"\n",(0,i.jsx)(n.h3,{children:(0,i.jsx)(n.code,{children:"AuthContext.acquireToken()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"acquireToken()\r\nacquireToken(forceRefresh)\r\nacquireToken(callback)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Gets access token for the logged in user.\r\nIt will try to refresh access token if the current one is already expired."}),"\n",(0,i.jsx)(n.h3,{children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"forceRefresh"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsx)(n.p,{children:"Whether to refresh access token even if it is not expired."}),(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"callback"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsxs)(n.p,{children:["A callback receiving access token, or ",(0,i.jsx)(n.code,{children:"null"})," if user has not logged in, and a flag indicates whether a refresh could be tried."]})]}),"\n",(0,i.jsx)(n.h3,{children:"Return value"}),"\n",(0,i.jsxs)(n.p,{children:["The access token, or ",(0,i.jsx)(n.code,{children:"null"})," if user has not logged in."]}),"\n",(0,i.jsx)(n.h3,{children:(0,i.jsx)(n.code,{children:"AuthContext.login()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"login()\r\nlogin(options)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Logs in using one of the authentication providers."}),"\n",(0,i.jsx)(n.h3,{children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"options"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsxs)(n.p,{children:["Options for logging in. If multiple authentication providers exists, either ",(0,i.jsx)(n.code,{children:"provider"})," or ",(0,i.jsx)(n.code,{children:"loginHint"})," must be provided."]}),(0,i.jsxs)("dl",{children:[(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"loginHint"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsxs)(n.p,{children:["Login hint, usually user email, to determine which authentication provider should be used when ",(0,i.jsx)(n.code,{children:"provider"})," is not specified.\r\nSupplied value will be passed to authentication provider."]}),(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"password"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsx)(n.p,{children:"Password to be passed to authentication provider."}),(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"provider"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsx)(n.p,{children:"A string as the key to identify which authentication provider should be used."}),(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"returnPath"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsx)(n.p,{children:"Path to visit after logged in."})]})]}),"\n",(0,i.jsx)(n.h3,{children:"Return value"}),"\n",(0,i.jsx)(n.p,{children:"A promise which may resolve after logged in successfully."}),"\n",(0,i.jsx)(n.h3,{children:(0,i.jsx)(n.code,{children:"AuthContext.logout()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"logout()\r\nlogout(options)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Logs out the current user."}),"\n",(0,i.jsx)(n.h3,{children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"options"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsx)(n.p,{children:"Options for logging out."}),(0,i.jsxs)("dl",{children:[(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"returnPath"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsx)(n.p,{children:"Path to visit after logged out."}),(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"singleLogout"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsx)(n.p,{children:"Whether to also log out from other applications for the same single sign-on session."})]})]}),"\n",(0,i.jsx)(n.h3,{children:"Return value"}),"\n",(0,i.jsx)(n.p,{children:"A promise which may resolve after logged out successfully."}),"\n",(0,i.jsx)(n.h3,{children:(0,i.jsx)(n.code,{children:"AuthContext.on()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"on(event, handler)\r\non(handlers)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Register event handlers."}),"\n",(0,i.jsx)(n.h3,{children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsx)(n.h4,{children:(0,i.jsx)(n.code,{children:"event"})}),(0,i.jsx)(n.p,{children:"Event name."}),(0,i.jsx)(n.h4,{children:(0,i.jsx)(n.code,{children:"handler"})}),(0,i.jsx)(n.p,{children:"Callback to be invoked on such event."}),(0,i.jsx)(n.h4,{children:(0,i.jsx)(n.code,{children:"handlers"})}),(0,i.jsx)(n.p,{children:"A dictionary where each entry represents the event name and callback to be invoked on such event."})]}),"\n",(0,i.jsx)(n.h3,{children:(0,i.jsx)(n.code,{children:"AuthContext.resolveAuthProvider()"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"resolveAuthProvider(hint)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Resolves which authentication provider would be used based on the input."}),"\n",(0,i.jsx)(n.h3,{children:"Parameters"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsx)(n.h4,{children:(0,i.jsx)(n.code,{children:"hint"})}),(0,i.jsx)(n.p,{children:"A set of criteria."}),(0,i.jsxs)("dl",{children:[(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"loginHint"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsxs)(n.p,{children:["Login hint, usually user email, to determine which authentication provider should be used when ",(0,i.jsx)(n.code,{children:"provider"})," is not specified.\r\nSupplied value will be passed to authentication provider."]}),(0,i.jsxs)(n.h4,{children:[(0,i.jsx)(n.code,{children:"provider"})," ",(0,i.jsx)(c.Optional,{})]}),(0,i.jsx)(n.p,{children:"A string as the key to identify which authentication provider should be used."})]})]}),"\n",(0,i.jsxs)(n.h3,{children:[(0,i.jsx)(n.code,{children:"login"})," event"]}),"\n",(0,i.jsxs)(n.h3,{children:[(0,i.jsx)(n.code,{children:"logout"})," event"]}),"\n",(0,i.jsxs)(n.h3,{children:[(0,i.jsx)(n.code,{children:"sessionEnded"})," event"]})]})}function o(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(r,e)})):r(e)}}}]);