"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[69],{69:function(e,n,t){t.r(n);var a=t(2556);function r(e){const n=Object.assign({h1:"h1",p:"p",blockquote:"blockquote",a:"a",code:"code",h2:"h2",pre:"pre",h3:"h3",h4:"h4",ul:"ul",li:"li",strong:"strong"},e.components),{Module:t,MemberList:r,VersionTimeline:i,Badge:h}=n;return h||s("Badge",!1),h.ReadOnly||s("Badge.ReadOnly",!0),h.Version||s("Badge.Version",!0),r||s("MemberList",!0),t||s("Module",!0),i||s("VersionTimeline",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t,{name:"brew-js/extension/router"}),"\n",(0,a.jsx)(n.h1,{children:"Router: navigate event"}),"\n",(0,a.jsx)(n.p,{children:"Fired when the app is about to navigate to a new path."}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Note that ",(0,a.jsx)(n.a,{href:":",children:(0,a.jsx)(n.code,{children:"app.path"})})," is not yet updated during ",(0,a.jsx)(n.code,{children:"navigate"})," event."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"app.on('navigate', callback)\n"})}),"\n",(0,a.jsx)(n.h3,{children:"Parameters"}),"\n",(0,a.jsxs)("dl",{children:[(0,a.jsx)(n.h4,{children:(0,a.jsx)(n.code,{children:"callback"})}),(0,a.jsxs)(n.p,{children:["Event listener which the receives a ",(0,a.jsx)(n.code,{children:"NavigateEvent"})," object as first argument."]})]}),"\n",(0,a.jsx)(n.h2,{children:"Behavior on navigation"}),"\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.a,{href:":",children:(0,a.jsx)(n.code,{children:"app.path"})})," is updated in this event, the app will redirect to the new path, skipping the current one."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"app.on('navigate', ({ oldPathname, pathname, route }) => {\r\n    if (pathname !== '/my-page') {\r\n        // both works the same\r\n        app.path = '/page-not-found';\r\n        app.navigate('/page-not-found');\r\n    }\r\n});\n"})}),"\n",(0,a.jsx)(n.h2,{children:"NavigateEvent interface"}),"\n",(0,a.jsx)(r,{i:"NavigateEvent",ip:["pathname","oldPathname","oldStateId","newStateId","route","data","navigationType"]}),"\n",(0,a.jsxs)(n.h3,{children:[(0,a.jsx)(n.code,{children:"NavigateEvent.data"})," ",(0,a.jsx)(h.ReadOnly,{})]}),"\n",(0,a.jsxs)(n.p,{children:["Retreives the data passed to ",(0,a.jsx)(n.a,{href:":",children:(0,a.jsx)(n.code,{children:"app.navigate"})}),"."]}),"\n",(0,a.jsxs)(n.h3,{children:[(0,a.jsx)(n.code,{children:"NavigateEvent.navigationType"})," ",(0,a.jsx)(h.ReadOnly,{})," ",(0,a.jsx)(h.Version,{})]}),"\n",(0,a.jsx)(n.p,{children:"Gets the type of navigation. It has the following possible values:"}),"\n",(0,a.jsxs)("dl",{children:[(0,a.jsx)(n.h4,{children:(0,a.jsx)(n.code,{children:"navigate"})}),(0,a.jsx)(n.p,{children:"Any case besides the following."}),(0,a.jsx)(n.h4,{children:(0,a.jsx)(n.code,{children:"resume"})}),(0,a.jsxs)(n.p,{children:["Indicating that the previous journey has been resumed. See ",(0,a.jsx)(n.a,{href:"/docs/router/resume-journey",children:"Resuming journey"}),"."]}),(0,a.jsx)(n.h4,{children:(0,a.jsx)(n.code,{children:"reload"})}),(0,a.jsx)(n.p,{children:"Indicating that the page is reloaded."}),(0,a.jsx)(n.h4,{children:(0,a.jsx)(n.code,{children:"back_forward"})}),(0,a.jsx)(n.p,{children:"Indicating that user has traversed back or forward through browser's history."})]}),"\n",(0,a.jsxs)(n.h3,{children:[(0,a.jsx)(n.code,{children:"NavigateEvent.newStateId"})," ",(0,a.jsx)(h.ReadOnly,{})]}),"\n",(0,a.jsx)(n.p,{children:"Gets the unique state ID for the page going to navigate."}),"\n",(0,a.jsxs)(n.h3,{children:[(0,a.jsx)(n.code,{children:"NavigateEvent.oldPathname"})," ",(0,a.jsx)(h.ReadOnly,{})]}),"\n",(0,a.jsx)(n.p,{children:"Gets the path where user is navigating from."}),"\n",(0,a.jsxs)(n.h3,{children:[(0,a.jsx)(n.code,{children:"NavigateEvent.oldStateId"})," ",(0,a.jsx)(h.ReadOnly,{})]}),"\n",(0,a.jsx)(n.p,{children:"Gets the unique state ID for the page about to leave."}),"\n",(0,a.jsxs)(n.h3,{children:[(0,a.jsx)(n.code,{children:"NavigateEvent.pathname"})," ",(0,a.jsx)(h.ReadOnly,{})]}),"\n",(0,a.jsx)(n.p,{children:"Retreives the app path being loaded."}),"\n",(0,a.jsxs)(n.h3,{children:[(0,a.jsx)(n.code,{children:"NavigateEvent.route"})," ",(0,a.jsx)(h.ReadOnly,{})]}),"\n",(0,a.jsx)(n.p,{children:"Gets the route parameters extracted from the path navigating to."}),"\n",(0,a.jsx)(n.h2,{children:"Version information"}),"\n",(0,a.jsx)(i,{module:"brew-js",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"0.1.0"})," Introduced"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"0.5.0"})," ",(0,a.jsx)(n.code,{children:"navigationType"})]}),"\n"]})})]})}function s(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(r,e)})):r(e)}}}]);