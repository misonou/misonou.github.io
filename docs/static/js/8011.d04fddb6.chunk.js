"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[8011],{8011:function(e,n,r){r.r(n);var o=r(2556);function l(e){const n=Object.assign({h1:"h1",h2:"h2",pre:"pre",code:"code",h3:"h3",p:"p",a:"a",blockquote:"blockquote",h4:"h4"},e.components),{Module:r,MemberList:l}=n;return l||i("MemberList",!0),r||i("Module",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r,{name:"@misonou/react-app-utils"}),"\n",(0,o.jsx)(n.h1,{children:"FormDevToolMixin"}),"\n",(0,o.jsx)(n.h2,{children:"Syntax"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"useFormDevToolMixin()\n"})}),"\n",(0,o.jsx)(n.h3,{children:"Return value"}),"\n",(0,o.jsxs)(n.p,{children:["A ",(0,o.jsx)(n.a,{href:":",children:(0,o.jsx)(n.code,{children:"FormDevToolMixin"})})," instance."]}),"\n",(0,o.jsx)(n.h2,{children:"Form autofill"}),"\n",(0,o.jsxs)(n.p,{children:["Using autofiller, by ",(0,o.jsx)("kbd",{children:"Ctrl"})," clicking form area, a select box will be shown,\r\nallowing selecting a set of form data to be filled."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Only data entry associated to a visible form element will be filled."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"/// view.ts\r\nfunction View() {\r\n    const formDevTool = useFormDevToolMixin().promptAutofill(() => import(\"./__mock_data.json\"));\r\n    return (\r\n        <div {...Mixin.use(formDevTool)}>\r\n            {/* content */}\r\n        </div>\r\n    );\r\n}\r\n\r\n/// dev.ts\r\n/**\r\n * Actions in this file are excluded from production build\r\n */\r\nimport from \"@misonou/react-app-utils/formAutofiller\";\r\n\r\n/// rewired.config.js\r\nmodule.exports = {\r\n    webpack: function (config, env) {\r\n        return {\r\n            resolve: {\r\n                alias: {\r\n                    ...(env === 'production' ? {\r\n                        // exclude all dev and mock data from build\r\n                        [path.resolve('./__mock_data.json')]: false\r\n                        [path.resolve('./dev.ts')]: false\r\n                    } : undefined),\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\n"})}),"\n",(0,o.jsx)(n.h2,{children:"FormDevToolMixin class"}),"\n",(0,o.jsx)(l,{i:"FormDevToolMixin",im:["promptAutofill()"]}),"\n",(0,o.jsx)(n.h3,{children:(0,o.jsx)(n.code,{children:"FormDevToolMixin.promptAutofill()"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"promptAutofill(dataset)\r\npromptAutofill(callback)\r\npromptAutofill(asyncImport)\n"})}),"\n",(0,o.jsx)(n.h4,{children:"Parameters"}),"\n",(0,o.jsxs)("dl",{children:[(0,o.jsx)(n.h4,{children:(0,o.jsx)(n.code,{children:"dataset"})}),(0,o.jsx)(n.p,{children:"A dictionary with each entry corresponds to different data to be auto-filled."}),(0,o.jsx)(n.h4,{children:(0,o.jsx)(n.code,{children:"callback"})}),(0,o.jsx)(n.p,{children:"A callback that returns dataset, or a promise that fulfills with dataset."}),(0,o.jsx)(n.h4,{children:(0,o.jsx)(n.code,{children:"asyncImport"})}),(0,o.jsx)(n.p,{children:"Async-import a dataset module."})]})]})}function i(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(l,e)})):l(e)}}}]);