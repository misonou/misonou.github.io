"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[7581],{7801:function(e,n,r){r.r(n),r.d(n,{default:function(){return x}});var o=r(2556),t=r(4855),s=r(8252),c=r(4519),i=r(2192),a=r(3967),d=function(){return d=Object.assign||function(e){for(var n,r=1,o=arguments.length;r<o;r++)for(var t in n=arguments[r])Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e},d.apply(this,arguments)};function u(){var e=(0,t.vV)(),n=(0,c.useState)(!0),r=n[0],u=n[1];return(0,c.useEffect)((function(){var n=e.elements(),o=n[0],t=n[1];r?a.ZP.retainFocus(o,t):a.ZP.releaseFocus(t)}),[r]),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.ZD,{label:"Delegate focus",checked:r,onChange:u}),(0,o.jsxs)("div",d({id:"demo-rgxdp"},{children:[(0,o.jsx)("div",d({},s.Z.use(e))),(0,o.jsx)("div",d({},s.Z.use(e)))]}))]})}var l='import { Mixin, useFocusStateMixin } from "brew-js-react";\r\nimport { useEffect, useState } from "react";\r\nimport { Toggle } from "src/components/controls";\r\nimport dom from "zeta-dom/dom";\r\n\r\nexport default function Component() {\r\n    const focusState = useFocusStateMixin();\r\n    const [delegateFocus, setDelegateFocus] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const [first, second] = focusState.elements();\r\n        if (delegateFocus) {\r\n            dom.retainFocus(first, second);\r\n        } else {\r\n            dom.releaseFocus(second);\r\n        }\r\n    }, [delegateFocus]);\r\n\r\n    return (\r\n        <>\r\n            <Toggle\r\n                label="Delegate focus"\r\n                checked={delegateFocus}\r\n                onChange={setDelegateFocus} />\r\n            <div id="demo-rgxdp">\r\n                <div {...Mixin.use(focusState)}></div>\r\n                <div {...Mixin.use(focusState)}></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n',f="#demo-rgxdp {\r\n    display: flex;\r\n    margin-top: 1em;\r\n    gap: 20px;\r\n}\r\n\r\n#demo-rgxdp > div {\r\n    border: 4px solid transparent;\r\n    background-color: lightgray;\r\n    width: 100px;\r\n    height: 100px;\r\n}\r\n\r\n#demo-rgxdp > div.focused {\r\n    border-color: red;\r\n}\r\n\r\n#demo-rgxdp > div::after {\r\n    content: 'Click me';\r\n}\r\n\r\n#demo-rgxdp > div.focused::after {\r\n    content: 'I\\'m focused';\r\n}\r\n",p=r(9596);function m(){return(0,o.jsx)(p.iV,{component:u,source:{tsx:l,css:f}})}function g(e){const n=Object.assign({h1:"h1",p:"p"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r,{name:"zeta-dom/dom"}),"\n",(0,o.jsx)(n.h1,{children:"Focus delegation"}),"\n",(0,o.jsx)(n.p,{children:"Focus delegation is much like portal in React, where focus and events are delegated to\r\nanother element which is not a descandant of a given element."}),"\n",(0,o.jsx)(n.p,{children:"The most common use case is for a flyout or dialog."}),"\n",(0,o.jsx)(n.p,{children:"Notice how the first box is kept in focus state while clicking the second box in the following example."}),"\n",(0,o.jsx)(m,{})]})}var x=function(e={}){const{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(g,e)})):g(e)}}}]);