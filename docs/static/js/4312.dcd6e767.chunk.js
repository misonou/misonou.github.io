"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[4312],{4312:function(e,n,r){r.r(n);var s=r(2556);function i(e){const n=Object.assign({h1:"h1",h2:"h2",h3:"h3",code:"code",p:"p",blockquote:"blockquote",a:"a",h4:"h4",pre:"pre"},e.components),{Module:r,MemberList:i,Badge:d}=n;return d||t("Badge",!1),d.Optional||t("Badge.Optional",!0),i||t("MemberList",!0),r||t("Module",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r,{name:"zeta-dom-react"}),"\n",(0,s.jsx)(n.h1,{children:"DataView class"}),"\n",(0,s.jsx)(i,{i:"DataView",ip:["filters","itemCount","sortBy","sortOrder","pageIndex","pageSize"],im:["on()","getView()","sort()","toJSON()","reset()"],sp:["pageSize"],ev:["viewChange"]}),"\n",(0,s.jsx)(n.h2,{children:"Instance properties"}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.filters"})}),"\n",(0,s.jsx)(n.p,{children:"Gets the filter object."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Updating its property will trigger a component update, as well as ",(0,s.jsx)(n.code,{children:"viewChange"})," event."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.itemCount"})}),"\n",(0,s.jsx)(n.p,{children:"Gets or sets the total number of items."}),"\n",(0,s.jsxs)(n.p,{children:["The value is automatically updated by ",(0,s.jsx)(n.a,{href:":",children:(0,s.jsx)(n.code,{children:"DataView.getView"})}),"."]}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.sortBy"})}),"\n",(0,s.jsx)(n.p,{children:"Gets or sets the sorting field."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Updating its property will trigger a component update, as well as ",(0,s.jsx)(n.code,{children:"viewChange"})," event."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.sortOrder"})}),"\n",(0,s.jsx)(n.p,{children:"Gets or sets the sorting order, whether by ascending or descending of the specified field."}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"asc"})}),(0,s.jsx)(n.p,{children:"Items are sorted in ascending order."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"desc"})}),(0,s.jsx)(n.p,{children:"Items are sorted in descending order."})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Updating its property will trigger a component update, as well as ",(0,s.jsx)(n.code,{children:"viewChange"})," event."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.pageIndex"})}),"\n",(0,s.jsx)(n.p,{children:"Gets or sets the page index."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Updating its property will trigger a component update, as well as ",(0,s.jsx)(n.code,{children:"viewChange"})," event."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.pageSize"})}),"\n",(0,s.jsx)(n.p,{children:"Gets or sets the page size."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Updating its property will trigger a component update, as well as ",(0,s.jsx)(n.code,{children:"viewChange"})," event."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{children:"Instance methods"}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.on()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"dataView.on(event, handler)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Registers event handlers."}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"event"})}),(0,s.jsx)(n.p,{children:"Name of the event."}),(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"handler"})}),(0,s.jsx)(n.p,{children:"A callback function to be fired when the specified event is triggered."})]}),"\n",(0,s.jsx)(n.h3,{children:"Return value"}),"\n",(0,s.jsx)(n.p,{children:"A function that will unregister the handlers when called."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.getView()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"dataView.getView(items)\r\ndataView.getView(items, callback)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Performs filtering and sorting of items.\r\nThe callback is only called initially, or when the reference to the item array has changed, or filter values or sorting has changed."}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"items"})}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"callback"})," ",(0,s.jsx)(d.Optional,{})]}),(0,s.jsx)(n.p,{children:"A handler that returns a filtered and sorted array of items."})]}),"\n",(0,s.jsx)(n.h3,{children:"Return value"}),"\n",(0,s.jsx)(n.p,{children:"An array containing a list of filtered and sorted items in the current page, and the total number of filtered items."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.sort()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"dataView.sort(items)\r\ndataView.sort(items, property)\r\ndataView.sort(items, callback)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Creates a sorted list of item using the value of property named by ",(0,s.jsx)(n.code,{children:"DataView.sortBy"})," from each object.\r\nItem order is reversed if ",(0,s.jsx)(n.code,{children:"DataView.sortOrder"})," is set to ",(0,s.jsx)(n.code,{children:"desc"}),".\r\nFor items of the same order, they will preserve the previous order in the sorted list."]}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"items"})}),(0,s.jsx)(n.p,{children:"A list of items."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"property"})," ",(0,s.jsx)(d.Optional,{})]}),(0,s.jsx)(n.p,{children:"The name of property of which values are used to determined ordering."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"callback"})," ",(0,s.jsx)(d.Optional,{})]}),(0,s.jsx)(n.p,{children:"A callback which returns value or a list of values to determined ordering."})]}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.toJSON()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"dataView.toJSON()\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gets the data view properties as a plain object for persisting states."}),"\n",(0,s.jsx)(n.h3,{children:(0,s.jsx)(n.code,{children:"DataView.reset()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"dataView.reset()\n"})}),"\n",(0,s.jsx)(n.p,{children:"Resets filters, sorting and paging to default values."}),"\n",(0,s.jsx)(n.h2,{children:"Events"}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"viewChange"})," event"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"dataView.on('viewChange', (e, self) => { /* ... */ })\n"})})]})}function t(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(i,e)})):i(e)}}}]);