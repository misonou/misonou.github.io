"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[3477],{3477:function(e,n,r){r.r(n);var o=r(2556);function t(e){const n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",blockquote:"blockquote",h2:"h2"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r,{name:"zeta-dom"}),"\n",(0,o.jsx)(n.h1,{children:"Watchable objects"}),"\n",(0,o.jsxs)(n.p,{children:["Objects can have ",(0,o.jsx)(n.code,{children:"watch"})," and ",(0,o.jsx)(n.code,{children:"watchOnce"})," method attached."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"let obj = watchable({ prop: 1 });\r\n\r\n// equivalent to the following line\r\n// watch(obj, 'prop')\r\nobj.watch('prop', () => { /* ... */ });\r\n\r\n// equivalent to the following line\r\n// watchOnce(obj, 'prop')\r\nobj.watchOnce('prop');\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"watchable"})," can also be called for prototype object to make a class watchable."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { watchable } from \"zeta-dom/util\"\r\n\r\nfunction MyClass() { }\r\nwatchable(MyClass.prototype);\r\n\r\nlet obj = new MyClass();\r\nobj.watch('myProp', () => { /* ... */ });\r\nobj.watchOnce('myProp');\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Normally handlers attached to an observable property are called asynchronously. Handlers will be called only once for multiple assignments to the property in each event loop."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{children:"Synchronous event firing"}),"\n",(0,o.jsx)(n.p,{children:"By default, any handlers attached to an observable property are called asynchronously after the property has been changed."}),"\n",(0,o.jsxs)(n.p,{children:["However, this behavior can be altered by calling ",(0,o.jsx)(n.code,{children:"watchable"})," with ",(0,o.jsx)(n.code,{children:"true"})," as the second argument:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"let obj = {};\r\nlet handleChanges = watchable(obj, true);\r\n\r\nobj.watch('prop', () => {\r\n    console.log(2); \r\n});\r\nconsole.log(1);\r\nobj.prop = 'foo';\r\nconsole.log(3);\r\n\r\n// console outputs:\r\n// 1\r\n// 2\r\n// 3\n"})}),"\n",(0,o.jsx)(n.h2,{children:"Defining read-only observable properties"}),"\n",(0,o.jsxs)(n.p,{children:["To achieve a read-only observable property, the property can be explicitly defined with ",(0,o.jsx)(n.code,{children:"defineObservableProperty"}),", with the getter flag set to true:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"function createObject() {\r\n    let obj = {};\r\n    let setValue = defineObservableProperty(obj, 'value', 1, true);\r\n    \r\n    // increate obj.value per second\r\n    setInteval(() => {\r\n        setValue(obj.value + 1);\r\n    }, 1000);\r\n    \r\n    // setValue is kept private so that no other\r\n    // can update the property and hence read-only\r\n    return obj;\r\n}\r\n\r\nlet obj = createObject();\r\nwatch(obj, 'value', () => { /* ... */ });\r\n\r\n// following will raise exception as obj.value does not have setter\r\nobj.value = 2;\n"})}),"\n",(0,o.jsx)(n.h2,{children:"Filtrating values"}),"\n",(0,o.jsxs)(n.p,{children:["The function ",(0,o.jsx)(n.code,{children:"defineObservableProperty"})," can also be used to filtrate values being set to an observed property."]}),"\n",(0,o.jsx)(n.h2,{children:"Defining alias observable properties"}),"\n",(0,o.jsxs)(n.p,{children:["Observable properties can be forwarded to another object by ",(0,o.jsx)(n.code,{children:"defineAliasProperty"}),"."]})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(t,e)})):t(e)}}}]);
//# sourceMappingURL=3477.e3a33f1c.chunk.js.map