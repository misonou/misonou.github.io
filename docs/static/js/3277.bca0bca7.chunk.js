"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[3277],{3277:function(e,r,n){n.r(r),n.d(r,{default:function(){return o}});var i=n(2556),t=n(1986),s='import { NumericField, NumericFieldProps, combineRef, domEventRef, useFormField } from "zeta-dom-react";\r\nimport dom from "zeta-dom/dom";\r\nimport { getRect } from "zeta-dom/domUtil";\r\nimport { pipe } from "zeta-dom/util";\r\n\r\nexport interface SliderFieldProps extends NumericFieldProps {\r\n    min: number;\r\n    max: number;\r\n    step?: number;\r\n    format?: (value: number) => string;\r\n}\r\n\r\nexport function SliderField(props: SliderFieldProps) {\r\n    const { value, setValue, elementRef } = useFormField(NumericField, props, props.min);\r\n    const percent = 100 * (value - props.min) / (props.max - props.min);\r\n\r\n    return (\r\n        <div ref={combineRef(elementRef, domEventRef({ drag, touchstart(e) { e.preventDefault() } }))} className="zui-field zui-slider-field">\r\n            <div className="zui-slider-field-line">\r\n                <div className="zui-slider-field-line-fill" style={{ width: percent + \'%\' }}></div>\r\n                <div className="zui-slider-field-button" style={{ left: percent + \'%\' }}></div>\r\n            </div>\r\n            <div className="zui-slider-field-text">\r\n                <span>{(props.format || pipe)(props.min)}</span>\r\n                <span>{(props.format || pipe)(props.max)}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function drag(_: any, element: HTMLElement) {\r\n        const rect = getRect(element);\r\n        return dom.beginDrag(x => {\r\n            const percent = Math.min(1, Math.max(0, (x - rect.left) / (rect.right - rect.left)));\r\n            const step = props.step || 1;\r\n            setValue(props.min + Math.ceil((props.max - props.min) * percent / step) * step);\r\n        });\r\n    }\r\n}\r\n';function l(e){const r=Object.assign({h1:"h1",pre:"pre",code:"code",h2:"h2",ul:"ul",li:"li",a:"a"},e.components),{Module:n,CodeBlock:l}=r;return l||c("CodeBlock",!0),n||c("Module",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{name:"zeta-dom-react"}),"\n",(0,i.jsx)(r.h1,{children:"Slider"}),"\n",(0,i.jsx)(t.RW,{min:0,max:100}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:"<SliderField min={0} max={100} />\n"})}),"\n",(0,i.jsx)(r.h2,{children:"Steps"}),"\n",(0,i.jsx)(t.RW,{min:0,max:100,step:10}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:"<SliderField min={0} max={100} step={10} />\n"})}),"\n",(0,i.jsx)(r.h2,{children:"Custom label"}),"\n",(0,i.jsx)(t.RW,{min:0,max:100,format:new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",minimumFractionDigits:2}).format}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-tsx",children:"<SliderField min={0} max={100}\r\n    format={new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2\r\n    }).format} />\n"})}),"\n",(0,i.jsx)(r.h2,{children:"Source code"}),"\n",(0,i.jsx)(l,{children:s,className:"typescript"}),"\n",(0,i.jsx)(r.h2,{children:"See also"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:":",children:(0,i.jsx)(r.code,{children:"NumericField"})})}),"\n"]})]})}var o=function(e={}){const{wrapper:r}=e.components||{};return r?(0,i.jsx)(r,Object.assign({},e,{children:(0,i.jsx)(l,e)})):l(e)};function c(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);