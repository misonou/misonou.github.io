"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[4991],{4991:function(e,n,r){r.r(n);var d=r(2556);function s(e){const n=Object.assign({h1:"h1",p:"p",h2:"h2",del:"del",a:"a",code:"code",pre:"pre"},e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h1,{children:"React runtime issues"}),"\n",(0,d.jsx)(n.p,{children:"Here listed major known issues over different versions, listing affected versions and possible workaround."}),"\n",(0,d.jsx)(n.h2,{children:"MultiChoice field does not re-render for changes"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.del,{children:"zeta-dom-react 0.5.7-0.5.11"})}),"\n",(0,d.jsxs)(n.p,{children:["When a field control using ",(0,d.jsx)(n.a,{href:":",children:(0,d.jsx)(n.code,{children:"MultiChoiceField"})}),", and is controlled using ",(0,d.jsx)(n.code,{children:"value"})," property and not bound to a ",(0,d.jsx)(n.a,{href:":",children:(0,d.jsx)(n.code,{children:"FormContext"})}),",\r\nthe control will not reflect changes to updated value."]}),"\n",(0,d.jsxs)(n.p,{children:["To fix the issue, upgrade ",(0,d.jsx)(n.code,{children:"zeta-dom-react"})," to ",(0,d.jsx)(n.code,{children:"0.5.12"})," or newer."]}),"\n",(0,d.jsx)(n.h2,{children:"React app does not run in production build"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.del,{children:"brew-js-react <=0.6.2"})}),"\n",(0,d.jsxs)(n.p,{children:["Due to optimization, modules may be concatenated in such a way that\r\n",(0,d.jsx)(n.code,{children:"brew-js-react"})," is not properly initialized, causing error like below\r\nwhen calling exported functions such as ",(0,d.jsx)(n.a,{href:":",children:(0,d.jsx)(n.code,{children:"useAppReadyState"})}),", ",(0,d.jsx)(n.a,{href:":",children:(0,d.jsx)(n.code,{children:"useRouteParam"})}),", ",(0,d.jsx)(n.a,{href:":",children:(0,d.jsx)(n.code,{children:"renderView"})})," and etc.:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-text",children:"Uncaught TypeError: Cannot read properties of undefined (reading 'readyState')\n"})}),"\n",(0,d.jsxs)(n.p,{children:["To fix the issue, upgrade ",(0,d.jsx)(n.code,{children:"brew-js-react"})," to ",(0,d.jsx)(n.code,{children:"0.6.3"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:["If upgrade is not plausible, import any exported functions from ",(0,d.jsx)(n.code,{children:"brew-js-react"}),"\r\nin the file where ",(0,d.jsx)(n.code,{children:"brew()"})," is called."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'import brew from "brew-js-react";\r\nimport { useAppReadyState } from "brew-js-react"; // add this line\r\n\r\nbrew(app => { /* ... */ });\n'})}),"\n",(0,d.jsx)(n.h2,{children:"Choice field causing parent component to update indefinitely"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.del,{children:"zeta-dom-react 0.3.10-0.4.3"})}),"\n",(0,d.jsxs)(n.p,{children:["When using ",(0,d.jsx)(n.a,{href:":",children:(0,d.jsx)(n.code,{children:"ChoiceField"})})," (e.g. for dropdowns) and having ",(0,d.jsx)(n.code,{children:"value"})," and ",(0,d.jsx)(n.code,{children:"onChange"})," prop, the following error is logged in console:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-text",children:"ReactJS: Maximum update depth exceeded error\n"})}),"\n",(0,d.jsxs)(n.p,{children:["A bug is introduced in ",(0,d.jsx)(n.code,{children:"v0.3.10"})," that will cause ",(0,d.jsx)(n.code,{children:"onChange"})," of an unselected controlled choice field to call every time component refreshes, which leads to infinite update when ",(0,d.jsx)(n.code,{children:"onChange"})," sets new state every time."]}),"\n",(0,d.jsx)(n.p,{children:"Problematic code:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<Dropdown\r\n    value={value}\r\n    onChange={() => setValue(newValueEveryTime())} />\n"})}),"\n",(0,d.jsxs)(n.p,{children:["To fix the issue, upgrade ",(0,d.jsx)(n.code,{children:"zeta-dom"})," to ",(0,d.jsx)(n.code,{children:"0.4.4"}),"."]}),"\n",(0,d.jsx)(n.p,{children:"If upgrade is not plausible, add guarding condition like below:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<Dropdown\r\n    value={value}\r\n    onChange={v => ensureValueIsUpdated(v) && setValue(newValueEveryTime())} />\n"})}),"\n",(0,d.jsx)(n.h2,{children:"Unable for a controlled field to update its value"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.del,{children:"zeta-dom-react 0.3.6-0.3.9"})}),"\n",(0,d.jsxs)(n.p,{children:["A major bug was identified that affects ",(0,d.jsx)(n.code,{children:"v0.3.6"}),"-",(0,d.jsx)(n.code,{children:"0.3.9"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:["To fix the issue, upgrade ",(0,d.jsx)(n.code,{children:"zeta-dom-react"})," to ",(0,d.jsx)(n.code,{children:"0.3.10"})," or newer."]}),"\n",(0,d.jsx)(n.h2,{children:"useAsync not working in React 18"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.del,{children:"zeta-dom-react <=0.3.9"})}),"\n",(0,d.jsxs)(n.p,{children:["Before ",(0,d.jsx)(n.code,{children:"v0.3.10"}),", there is known compatibility issue when strict mode is enabled."]}),"\n",(0,d.jsxs)(n.p,{children:["To fix the issue, upgrade ",(0,d.jsx)(n.code,{children:"zeta-dom-react"})," to ",(0,d.jsx)(n.code,{children:"0.3.10"})," or newer."]})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,d.jsx)(n,Object.assign({},e,{children:(0,d.jsx)(s,e)})):s(e)}}}]);