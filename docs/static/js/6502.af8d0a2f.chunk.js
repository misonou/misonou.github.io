"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[6502],{2870:function(e,n,i){i.r(n);var t=i(2556);function a(e){const n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",h2:"h2",del:"del",ul:"ul",li:"li"},e.components),{Module:i,WaterpipeExample:a}=n;return i||s("Module",!0),a||s("WaterpipeExample",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i,{name:"waterpipe"}),"\n",(0,t.jsx)(n.h1,{children:"Defining template"}),"\n",(0,t.jsx)(n.p,{children:"Templates can be predefined elsewhere and be included on use."}),"\n",(0,t.jsxs)(n.p,{children:["To make a template available for inclusion, defined the template on ",(0,t.jsx)(n.code,{children:"waterpipe.pipes"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"waterpipe.pipes.myTemplate = 'The value is {{value}}.';\n"})}),"\n",(0,t.jsx)(n.p,{children:"In such sense a template is considered as a parameterless pipe function.\r\nTherefore it is the same to include the template than to invoke a pipe function."}),"\n",(0,t.jsx)(a,{pipes:{myTemplate:"The value is {{value}}."},data:{value:"foo",obj:{value:"bar"}},examples:["myTemplate","obj myTemplate"]}),"\n",(0,t.jsx)(n.h2,{children:"Define template in HTML document"}),"\n",(0,t.jsxs)(n.p,{children:["When using waterpipe in HTML document, any ",(0,t.jsx)(n.code,{children:"<script>"})," tag with type ",(0,t.jsx)(n.code,{children:"text/x-waterpipe"}),"\r\nwill be automatically setup on ",(0,t.jsx)(n.code,{children:"waterpipe.pipes"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<script type="text/x-waterpipe" id="myTemplate">\r\nThe value is {{value}}.\r\n<\/script>\n'})}),"\n",(0,t.jsx)(n.h2,{children:"Single-valued template"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.del,{children:"2.1"})}),"\n",(0,t.jsx)(n.p,{children:"A template is considered single-valued if there is"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"only one evaluated output throughout execution; and"}),"\n",(0,t.jsx)(n.li,{children:"only consist of whitespace characters in non-evaluated output."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If such case, including these templates as pipe functions,\r\nthe evaluated value can be used for conditional testing, iteration, or\r\nchained to the next pipe function without being stringified."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"waterpipe.pipes.positive = '{{value > 0}}';\n"})}),"\n",(0,t.jsx)(a,{pipes:{positive:"{{value > 0}}"},data:{value:-1},template:"\n{{if value positive}}\n    positive\n{{else}}\n    negative\n{{/if}}"}),"\n",(0,t.jsxs)(n.p,{children:['Prior to version 2.1, the first example outputs "positive" instead because ',(0,t.jsx)(n.code,{children:"{{value positive}}"})," returns stringified ",(0,t.jsx)(n.code,{children:'"false"'})," instead of boolean ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.h2,{children:"Defining template in data"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.del,{children:"2.8"})}),"\n",(0,t.jsxs)(n.p,{children:["Since version 2.8, it is possible to evaluate template stored in data object using the ",(0,t.jsx)(n.code,{children:"eval"})," pipe function."]}),"\n",(0,t.jsx)(n.p,{children:"For example given the following data:"}),"\n",(0,t.jsx)(a,{data:{value:1,template:"The value is {{.}}."},examples:["value |> template"]})]})}function s(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(a,e)})):a(e)}}}]);