"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[7392],{7392:function(e,n,r){r.r(n);var t=r(2556);function o(e){const n=Object.assign({h1:"h1",p:"p",a:"a",code:"code",blockquote:"blockquote",pre:"pre",h2:"h2"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r,{name:"brew-js-react"}),"\n",(0,t.jsx)(n.h1,{children:"Using route parameter"}),"\n",(0,t.jsxs)(n.p,{children:["Route parameters defined in routes can be accessed using the ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"useRouteParam"})})," hook."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Although route parameters can be directly accessed through ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"app.route"})})," object,\r\nit is recommended not to be used inside view components. See ",(0,t.jsx)(n.a,{href:"#s-different-between-app-route",children:"Different between app.route"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For example the below view will get product info based on the product ",(0,t.jsx)(n.code,{children:"id"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export default function ProductInfo() {\r\n    const id = useRouteParam('id');\r\n    const productInfo = useAsync(() => {/* ... */}, [id]);\r\n    /* ... */\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The component will update if the ",(0,t.jsx)(n.code,{children:"id"})," parameter changes, if the ",(0,t.jsx)(n.code,{children:"Product"})," view is still active."]}),"\n",(0,t.jsx)(n.h2,{children:"Setting route parameter"}),"\n",(0,t.jsxs)(n.p,{children:["Route parameter can be updated directly on ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"app.route"})})," object."]}),"\n",(0,t.jsx)(n.h2,{children:"Different between app.route"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"app.route"})})," object exposed the route parameter values that could be just updated and a navigation\r\nis being triggered. Unwanted component updates may occur if relying on ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"app.route"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["On the other hand, ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"useRouteParam"})})," will only trigger component update only if the current view\r\nwill be still active after navigation caused by the parameter change."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, if the ",(0,t.jsx)(n.code,{children:"id"})," parameter is shared between the route for product and news:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"/// index.ts\r\nbrew.with(router)(app => {\r\n    app.useRouter({\r\n        routes: [\r\n            '/{view:product}/{id}',\r\n            '/{view:news}/{id}',\r\n            /* ... */\r\n        ]\r\n    })\r\n});\r\n\r\n/// views.ts\r\nexport const ProductInfo = registerView(() => import(\"./views/ProductInfo\"), {\r\n    view: 'product',\r\n    id:   /.+/\r\n});\r\nexport const NewsInfo = registerView(() => import(\"./views/NewsInfo\"), {\r\n    view: 'news',\r\n    id:   /.+/\r\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Current on ",(0,t.jsx)(n.code,{children:"/product/1"})," where the following component is rendered for displaying the product:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"export default function ProductInfo() {\r\n    const id = useRouteParam('id');\r\n    const productInfo = useAsync(() => { /* ... */ }, [id]);\r\n    /* ... */\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["When user navigates to ",(0,t.jsx)(n.code,{children:"/news/2"}),", the ",(0,t.jsx)(n.code,{children:"app.route.id"})," will immediately be updated to ",(0,t.jsx)(n.code,{children:"2"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["However since the ",(0,t.jsx)(n.code,{children:"ProductInfo"})," no longer matched the new route, the view context will become inactive.\r\nThus the ",(0,t.jsx)(n.code,{children:"useRouteParam"})," will not receive any updates, and the returned ",(0,t.jsx)(n.code,{children:"id"})," remains equal to ",(0,t.jsx)(n.code,{children:"1"})," even\r\nwhen the component rerenders during the transition phase."]})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,e)})):o(e)}}}]);