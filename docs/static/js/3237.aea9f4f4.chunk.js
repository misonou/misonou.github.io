"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[3237],{3237:function(e,n,o){o.r(n);var s=o(2556);function r(e){const n=Object.assign({h1:"h1",h3:"h3",code:"code",p:"p",blockquote:"blockquote",strong:"strong"},e.components),{Module:o,WaterpipeExample:r}=n;return o||t("Module",!0),r||t("WaterpipeExample",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o,{name:"waterpipe"}),"\n",(0,s.jsx)(n.h1,{children:"Comparison functions"}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"equals (==)"}),", ",(0,s.jsx)(n.code,{children:"notequals (!=)"})]}),"\n",(0,s.jsx)(n.p,{children:"Checks if the piped value is equal, or not equal, to the supplied argument.\r\nThe comparison is done by its string representation."}),"\n",(0,s.jsx)(r,{data:{foo:"bar"},examples:["foo == bar","foo != baz"]}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"more (>)"}),", ",(0,s.jsx)(n.code,{children:"less (<)"}),", ",(0,s.jsx)(n.code,{children:"ormore (>=)"}),", ",(0,s.jsx)(n.code,{children:"orless (<=)"}),", ",(0,s.jsx)(n.code,{children:"between"})]}),"\n",(0,s.jsx)(n.p,{children:"Checks if the piped value is more than, less than, more than or equal to, less than or equal to,\r\nor between the supplied argument(s)."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," In constrast to the native comparison operator, ",(0,s.jsx)(n.code,{children:"undefined"})," and ",(0,s.jsx)(n.code,{children:"null"})," are always less than any other values; and arrays are compared element by element recursively."]}),"\n"]}),"\n",(0,s.jsx)(r,{data:{foo:1},examples:["foo < 3","foo between 0 2"]}),"\n",(0,s.jsx)(n.p,{children:"Comparison functions also work on arrays:"}),"\n",(0,s.jsx)(r,{data:{foo:[1,3,5],bar:[1,3],baz:[2,4]},examples:["foo > bar","foo > baz"]}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"contains (*=)"}),", ",(0,s.jsx)(n.code,{children:"like"})]}),"\n",(0,s.jsx)(n.p,{children:"Checks if the string contains a substring or matches the given pattern."}),"\n",(0,s.jsx)(r,{examples:['"foobar" contains foo','"foobar" like /^foo/i']}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"startswith (^=)"}),", ",(0,s.jsx)(n.code,{children:"endswith ($=)"})]}),"\n",(0,s.jsx)(n.p,{children:"Checks if the string starts or ends with the given substring."}),"\n",(0,s.jsx)(r,{examples:['"foobar" ^= foo','"foobar" $= bar']}),"\n",(0,s.jsxs)(n.h3,{children:[(0,s.jsx)(n.code,{children:"iequals (~=)"}),", ",(0,s.jsx)(n.code,{children:"inotequals (!~=)"})]}),"\n",(0,s.jsx)(n.p,{children:"Checks if the string is equal, or not equal, to the given string by case-insensitive comparison."}),"\n",(0,s.jsx)(r,{examples:['"foobar" ~= Foobar','"foobar" !~= Foobar']})]})}function t(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}}}]);