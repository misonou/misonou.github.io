"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[5902],{5902:function(e,r,n){n.r(r);var s=n(2556);function a(e){const r=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",h4:"h4",ul:"ul",li:"li",strong:"strong",a:"a"},e.components),{Module:n,ImportHint:a,VersionTimeline:l,Badge:c}=r;return c||i("Badge",!1),c.Optional||i("Badge.Optional",!0),a||i("ImportHint",!0),n||i("Module",!0),l||i("VersionTimeline",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n,{name:"zeta-dom-react"}),"\n",(0,s.jsx)(r.h1,{children:"useValueTrigger"}),"\n",(0,s.jsx)(r.p,{children:"Creates a callback that forcibly triggers re-render of a component\r\nwhen it is called with a value different from that passed to the hook in last render."}),"\n",(0,s.jsx)(r.h2,{children:"Syntax"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"useValueTrigger(value)\r\nuseValueTrigger(value, comparer)\n"})}),"\n",(0,s.jsx)(a,{name:"useValueTrigger",module:"zeta-dom-react",require:"useValueTrigger",global:"zeta.react.useValueTrigger"}),"\n",(0,s.jsx)(r.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(r.h4,{children:(0,s.jsx)(r.code,{children:"value"})}),(0,s.jsx)(r.p,{children:"Value which returned callback will compare to."}),(0,s.jsxs)(r.h4,{children:[(0,s.jsx)(r.code,{children:"comparer"})," ",(0,s.jsx)(c.Optional,{})]}),(0,s.jsxs)(r.p,{children:["An optional callback that compares if two values are equal. Component will be updated only when it returns ",(0,s.jsx)(r.code,{children:"false"}),". Default is ",(0,s.jsx)(r.code,{children:"Object.is"}),"."]})]}),"\n",(0,s.jsx)(r.h2,{children:"Example: Case-insensitive string comparison"}),"\n",(0,s.jsxs)(r.p,{children:["Here is an example using the new ",(0,s.jsx)(r.code,{children:"comparer"})," parameter:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"const compare = new Intl.Collator(undefined, { sensitivity: 'base' }).compare;\r\n\r\nfunction Component() {\r\n    const value = getSomeValue();\r\n    const notifyChange = useValueTrigger(value, (a, b) => compare(a, b) === 0);\r\n    useEffect(() => {\r\n        // won't trigger update when `value` is 'a'\r\n        notifyChange('A');\r\n    });\r\n    /* ... */\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{children:"Version information"}),"\n",(0,s.jsx)(l,{module:"zeta-dom-react",children:(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"0.5.3"})," Introduced"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"0.5.6"})," ",(0,s.jsx)(r.code,{children:"comparer"})," parameter"]}),"\n"]})}),"\n",(0,s.jsx)(r.h2,{children:"See also"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:":",children:(0,s.jsx)(r.code,{children:"useEventTrigger"})})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:":",children:(0,s.jsx)(r.code,{children:"useUpdateTrigger"})})}),"\n"]})]})}function i(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}r.default=function(e={}){const{wrapper:r}=e.components||{};return r?(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(a,e)})):a(e)}}}]);