"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[9691],{9691:function(e,n,r){r.r(n);var t=r(2556);function i(e){const n=Object.assign({h1:"h1",h2:"h2",pre:"pre",code:"code",p:"p",a:"a",ul:"ul",li:"li",h3:"h3",blockquote:"blockquote",del:"del"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Upgrade guide"}),"\n",(0,t.jsx)(n.h2,{children:"Upgrading to brew-extension-auth 0.4.x"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"/* Before: */\r\nexport const Provider = {\r\n    init() {\r\n        /* ... */\r\n        const isLoginRedirect = /* need to be determined manually */;\r\n        return isLoginRedirect ? handleLoginRedirect() : getActiveAccount();\r\n    }\r\n}\r\n/* After: */\r\nexport const Provider = {\r\n    init() { /* ... */ }\r\n    handleLoginRedirect() { /* ... */ }\r\n    getActiveAccount() { /* ... */ }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Upgrading to brew-react-js 0.5.x"}),"\n",(0,t.jsxs)(n.p,{children:["If you have custom mixins extending ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"StatefulMixin"})})," class:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"StatefulMixin.state"})})," will be initially empty in every render, meaning that\r\nprevious state and default state from ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"StatefulMixin.initState"})}),"\r\nwill be unavailable. Use:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"StatefulMixin.mergeState"})})," when accessing or mutating states based on previous state,"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"StatefulMixin.onLayoutEffect"})})," to apply attributes or classes based on current state."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"StatefulMixin.clone"})," are no longer required."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{children:"Upgrading to brew.js 0.6.x"}),"\n",(0,t.jsx)(n.h3,{children:"Pure app event"}),"\n",(0,t.jsxs)(n.p,{children:["Event emitted to ",(0,t.jsx)(n.code,{children:"app"})," itself no longer emit to ",(0,t.jsx)(n.code,{children:"<html>"})," element."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// this is treated as pure app event\r\n// only event handler registered as app.on('event', handler)\r\n// will receive pure app event\r\napp.emit('event');\n"})}),"\n",(0,t.jsx)(n.p,{children:"I the event is intended to associates with the document root element, explicitly specifies as:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"app.emit('event', document.documentElement);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Event listener registered to ",(0,t.jsx)(n.code,{children:"app"})," will still receive the event."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// this still works\r\napp.on('event', () => {});\n"})}),"\n",(0,t.jsx)(n.p,{children:"On the other hand, if you are listening pure app event with target set to, move the target:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// before\r\napp.on(document.documentElement, 'event', () => {});\r\n// after\r\napp.on('event', () => {});\n"})}),"\n",(0,t.jsx)(n.h3,{children:"Animation"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Update stylesheet ",(0,t.jsx)(n.code,{children:"brew-js/styles/base.css"})," for built-in animation effects."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["To ensure animate sequence to work properly, make sure transition and animation are not started\r\nbefore ",(0,t.jsx)(n.code,{children:".tweening-in"})," class is applied."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:"[animate-in] {\r\n    transition-property: none;\r\n    transition-duration: var(--transition-duration);\r\n    transition-delay: var(--transition-delay);\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"to"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:"[animate-in] {\r\n    transition-property: none;\r\n    transition-duration: 0s;\r\n    transition-delay: var(--transition-delay);\r\n}\r\n\r\n[animate-in].tweening-in {\r\n    transition-duration: var(--transition-duration);\r\n}\n"})}),"\n",(0,t.jsxs)(n.h2,{children:["Upgrading to brew.js 0.4.x ",(0,t.jsx)(n.del,{children:"brew-js"})]}),"\n",(0,t.jsx)(n.h3,{children:"Feature moved to HtmlRouter"}),"\n",(0,t.jsxs)(n.p,{children:["When using router with html template, change to ",(0,t.jsx)(n.code,{children:"useHtmlRouter"}),"."]}),"\n",(0,t.jsx)(n.h3,{children:"Loading and error scope"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"loading"})," variable no longer automatically set when asynchronous operation is registered to DOM using ",(0,t.jsx)(n.code,{children:"notifyAsync"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Add ",(0,t.jsx)(n.code,{children:"loading-scope"})," to ",(0,t.jsx)(n.code,{children:"<html>"})," to enable it."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'<html loading-scope set-class="{ loading: loading }">\r\n    {/* ... */}\r\n</html>\n'})}),"\n",(0,t.jsxs)(n.h2,{children:["Upgrading to brew.js 0.3.x ",(0,t.jsx)(n.del,{children:"brew-js"})]}),"\n",(0,t.jsxs)(n.p,{children:["Starting v0.3, extensions must be loaded by ",(0,t.jsx)(n.code,{children:"brew.with"})," in order to use when using Webpack."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"brew.with(Router)(app => {\r\n});\n"})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(i,e)})):i(e)}}}]);