"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[7976],{7976:function(e,r,n){n.r(r);var s=n(2556);function c(e){const r=Object.assign({h1:"h1",p:"p",code:"code",a:"a",h3:"h3",pre:"pre",h4:"h4",h2:"h2",blockquote:"blockquote",del:"del",ul:"ul",li:"li",strong:"strong"},e.components),{Module:n,MemberList:c,VersionTimeline:o,Badge:t}=r;return t||d("Badge",!1),t.ReadOnly||d("Badge.ReadOnly",!0),t.Version||d("Badge.Version",!0),c||d("MemberList",!0),n||d("Module",!0),o||d("VersionTimeline",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n,{name:"zeta-dom-react"}),"\n",(0,s.jsx)(r.h1,{children:"ErrorHandler interface"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"ErrorHandler"})," object is created by ",(0,s.jsx)(r.a,{href:":",children:(0,s.jsx)(r.code,{children:"createErrorHandler"})})," or ",(0,s.jsx)(r.a,{href:":",children:(0,s.jsx)(r.code,{children:"useErrorHandler"})}),"."]}),"\n",(0,s.jsx)(c,{i:"ErrorHandler",im:["emit()","catch()"]}),"\n",(0,s.jsx)(r.h3,{children:(0,s.jsx)(r.code,{children:"ErrorHandler.catch()"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"catch(handler)\r\ncatch(code, handler)\r\ncatch(type, handler)\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Catches errors from promises registered to descandant elements by ",(0,s.jsx)(r.a,{href:":",children:(0,s.jsx)(r.code,{children:"notifyAsync"})}),".\r\nUnfiltered handlers are called after filtered handlers, registered by other overloads, regardless of order."]}),"\n",(0,s.jsxs)(r.p,{children:["If handler returns a value other than ",(0,s.jsx)(r.code,{children:"undefined"}),", including promises resolving to whatever values,\r\nthe error is marked as handled and no further handlers are called nor will be propagated up the DOM tree."]}),"\n",(0,s.jsx)(r.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(r.h4,{children:(0,s.jsx)(r.code,{children:"handler"})}),(0,s.jsx)(r.p,{children:"Callback to be invoked. It receives the following argument:"}),(0,s.jsxs)("dl",{children:[(0,s.jsx)(r.h4,{children:(0,s.jsx)(r.code,{children:"error"})}),(0,s.jsx)(r.p,{children:"Errors dispatched."}),(0,s.jsxs)(r.h4,{children:[(0,s.jsx)(r.code,{children:"context"})," ",(0,s.jsx)(t.Version,{})]}),(0,s.jsxs)(r.p,{children:["Additional information on the error event, see ",(0,s.jsx)(r.a,{href:":",children:(0,s.jsx)(r.code,{children:"ErrorContext"})}),"."]})]}),(0,s.jsx)(r.h4,{children:(0,s.jsx)(r.code,{children:"code"})}),(0,s.jsx)(r.p,{children:"Value to be matched against."}),(0,s.jsx)(r.h4,{children:(0,s.jsx)(r.code,{children:"type"})}),(0,s.jsx)(r.p,{children:"Constructor of a specific error type."})]}),"\n",(0,s.jsx)(r.h3,{children:(0,s.jsx)(r.code,{children:"ErrorHandler.emit()"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"emit(error)\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Emits error to handlers registered by ",(0,s.jsx)(r.a,{href:":",children:(0,s.jsx)(r.code,{children:"ErrorHandler.catch"})}),".\r\nIf the error is not marked as handled, the error will propagate up the DOM tree."]}),"\n",(0,s.jsx)(r.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(r.h4,{children:(0,s.jsx)(r.code,{children:"error"})}),(0,s.jsx)(r.p,{children:"Error to handle."})]}),"\n",(0,s.jsx)(r.h3,{children:"Return value"}),"\n",(0,s.jsx)(r.p,{children:"A promise that resolves to possible output returned from handlers."}),"\n",(0,s.jsx)(r.h2,{children:"ErrorContext interface"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"ErrorContext"})," interface is passed to error handler callback as the second argument."]}),"\n",(0,s.jsx)(c,{i:"ErrorContext",ip:["source","sourceKeyName","sourceElement"]}),"\n",(0,s.jsxs)(r.h3,{children:[(0,s.jsx)(r.code,{children:"ErrorContext.source"})," ",(0,s.jsx)(t.ReadOnly,{})]}),"\n",(0,s.jsx)(r.p,{children:"Gets the type of user interaction that triggers the event."}),"\n",(0,s.jsxs)(r.h3,{children:[(0,s.jsx)(r.code,{children:"ErrorContext.sourceElement"})," ",(0,s.jsx)(t.ReadOnly,{})]}),"\n",(0,s.jsx)(r.p,{children:"Gets the element that has error dispatched on."}),"\n",(0,s.jsxs)(r.h3,{children:[(0,s.jsx)(r.code,{children:"ErrorContext.sourceKeyName"})," ",(0,s.jsx)(t.ReadOnly,{})]}),"\n",(0,s.jsxs)(r.p,{children:["Gets the keystroke that triggers the event, or ",(0,s.jsx)(r.code,{children:"null"})," if the event is not triggered by keyboard."]}),"\n",(0,s.jsx)(r.h2,{children:"Handling specific errors"}),"\n",(0,s.jsx)(r.p,{children:"Error handler also provides selective registration of handler callbacks, so that different error can be handled differently:"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"Note that an unselective handler callback are always invoked after all selective handler callbacks."}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"function Component() {\r\n    const [data, state] = useAsync(() => { /* ... */ });\r\n    const errorHandler = useErrorHandler(state);\r\n\r\n    useEffect(() => {\r\n        return combineFn(\r\n            // this catches all errors of the type from CustomError\r\n            errorHandler.catch(CustomError, err => { /* ... */ }),\r\n            // this catches all errors with the specified code\r\n            errorHandler.catch('zeta/cancelled', err => { /* ... */ }),\r\n            // as the default case\r\n            errorHandler.catch(err => { /* ... */ })\r\n        );\r\n    }, [errorHandler]);\r\n\r\n    return (<div ref={errorHandler.ref}>{/* ... */}</div>);\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Sinve v0.4.2, it is possible to specify multiple codes or constructors in one ",(0,s.jsx)(r.code,{children:"catch"})," call:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"useEffect(() => {\r\n    return errorHandler.catch(['zeta/cancelled', CustomError], err => { /* ... */ });\r\n}, [errorHandler]);\n"})}),"\n",(0,s.jsx)(r.h2,{children:"Emitting errors"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.del,{children:"0.4.4"})}),"\n",(0,s.jsxs)(r.p,{children:["Asynchronous error can now be dispatched to error handler of the current or parent components using ",(0,s.jsx)(r.code,{children:"errorHandler.emit"}),"."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"function Component() {\r\n    const errorHandler = useErrorHandler(state);\r\n\r\n    useEffect(() => {\r\n        someAsyncAction().catch(err => errorHandler.emit(err));\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={errorHandler.ref}>{/* ... */}</div>\r\n    );\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Prior to v0.4.4, The error can be emitted directly through ",(0,s.jsx)(r.code,{children:"dom.emit"}),":"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"function Component() {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        someAsyncAction().catch(error => {\r\n            dom.emit('error', ref.current, { error }, true);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={ref}>{/* ... */}</div>\r\n    );\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{children:"Version information"}),"\n",(0,s.jsx)(o,{module:"zeta-dom-react",children:(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"0.3.2"})," Introduced"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"0.4.2"})," ",(0,s.jsx)(r.code,{children:"ErrorHandler.catch()"})," overload"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"0.4.4"})," ",(0,s.jsx)(r.code,{children:"ErrorHandler.emit()"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"0.5.13"})," ",(0,s.jsx)(r.code,{children:"context"})," argument"]}),"\n"]})})]})}function d(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}r.default=function(e={}){const{wrapper:r}=e.components||{};return r?(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(c,e)})):c(e)}}}]);