"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[1358],{1358:function(e,n,r){r.r(n);var t=r(2556);function p(e){const n=Object.assign({h1:"h1",p:"p",a:"a",code:"code",pre:"pre"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r,{name:"brew-js/app"}),"\n",(0,t.jsx)(n.h1,{children:"Extending app interface"}),"\n",(0,t.jsxs)(n.p,{children:["You can also define additional property members and methods as an instance and\r\ndefine it during app initializtion by ",(0,t.jsx)(n.a,{href:":",children:(0,t.jsx)(n.code,{children:"app.define"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import brew from \"brew-js/app\";\r\n\r\ninterface AppContext {\r\n    myProp: string;\r\n    myAction(): void;\r\n};\r\n\r\nbrew<AppContext>.with(appContext)((app) => {\r\n    app.define({\r\n        myProp: '',\r\n        myAction() {\r\n            /* ... */\r\n        }\r\n    });\r\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can also predefine the extra properties and method as a seperate object and supply it to ",(0,t.jsx)(n.code,{children:"brew.with"}),".\r\nHowever it is more likely prone to circular type inference issue in TypeScript."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import brew from \"brew-js/app\";\r\n\r\nconst appContext = {\r\n    myProp: 'myValue'\r\n    myAction() {\r\n        /* ... */\r\n    }\r\n};\r\n\r\nbrew.with(appContext)((app) => {\r\n    app.myAction();\r\n});\n"})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(p,e)})):p(e)}}}]);