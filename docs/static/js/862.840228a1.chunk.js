"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[862],{862:function(e,n,r){r.r(n);var o=r(2556);function a(e){const n=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2"},e.components),{Module:r,WaterpipeExample:a}=n;return r||s("Module",!0),a||s("WaterpipeExample",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r,{name:"waterpipe"}),"\n",(0,o.jsx)(n.h1,{children:"Statement: if"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"if"}),", ",(0,o.jsx)(n.code,{children:"elseif"})," and ",(0,o.jsx)(n.code,{children:"else"})," statement is available for branching logics."]}),"\n",(0,o.jsx)(a,{data:{value:1,array:[1,2,3]},template:"\n{{if value odd}}\n    Value is odd.\n{{elseif array any [ odd ]}} \n    Some numbers in the array is odd.\n{{else}}\n    There is no odd numbers.\n{{/if}}"}),"\n",(0,o.jsx)(n.h2,{children:"Compound logic"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"&&"})," and ",(0,o.jsx)(n.code,{children:"||"})," pipe functions are available for compound logic."]}),"\n",(0,o.jsx)(a,{data:{value:1,array:[1,3,5]},template:"\n{{if value odd && array all [ odd ]}}\n    All numbers are odd.\n{{/if}}"})]})}function s(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(a,e)})):a(e)}}}]);