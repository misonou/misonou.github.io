"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[8395],{8395:function(e,r,n){n.r(r);var s=n(2556);function o(e){const r=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",ol:"ol",li:"li",ul:"ul",h2:"h2"},e.components),{Module:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n,{name:"zeta-dom-react"}),"\n",(0,s.jsx)(r.h1,{children:"Customizing error message"}),"\n",(0,s.jsx)(r.p,{children:"Often validation message are required to be customized or translated."}),"\n",(0,s.jsxs)(r.p,{children:["To accomplish, it is recommended to return a ",(0,s.jsx)(r.code,{children:"ValidationError"})," instance in validators."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"function required() {\r\n    return (value?: string) => {\r\n        return value ? '' : new ValidationError('required');\r\n    };\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"The error then can be customized in 3 scopes:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["Field level:","\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"<Textbox required formatError={(err, name, props, form) => 'My custom error'} />\n"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["Form level:","\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"<Form formatError={(err, name, props, form) => 'My custom error'}>{/* ... */}</Form>\n"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["Global level:","\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"FormContext.formatError = ((err, name, props, form) => 'My custom error'});\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"formatError"})," callback takes the following parameters:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"err"}),": The ",(0,s.jsx)(r.code,{children:"ValidationError"})," instance returned from validator"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"name"}),": The name of validated field"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"props"}),": The props passed to the React component for that field"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"form"}),": The associated ",(0,s.jsx)(r.code,{children:"FormContext"})," object"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{children:"Accessing validator arguments"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"function range(min, max) {\r\n    return (value) => {\r\n        return value ? '' : new ValidationError('range', '...', { min, max });\r\n    };\r\n}\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"FormContext.formatError = (err, name, props, form) => {\r\n    switch (err.kind) {\r\n        case 'range':\r\n            return `Value must be between ${err.args.min} and ${err.args.max}`;\r\n    }\r\n};\n"})}),"\n",(0,s.jsx)(r.h2,{children:"For 0.4.0 and before"}),"\n",(0,s.jsx)(r.p,{children:"The return value of validators can be an object where it is implicitly converted to a string or a function that returns a string:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"function required() {\r\n    return (value?: string) => {\r\n        return value ? '' : (\r\n            /* props is whatever props passed to useFormField hook */\r\n            (props: any) => translate('required')\r\n        )\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"In case the validation fails and the function is returned to form field's hook, the callback is called every time when the component re-rendered."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"function TextField(props: FormFieldProps<string>) {\r\n    // add hook to re-render whe language changes\r\n    useI18n();\r\n    useFormField(props, '');\r\n}\n"})})]})}r.default=function(e={}){const{wrapper:r}=e.components||{};return r?(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o(e)}}}]);