"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[1069],{1069:function(e,n,r){r.r(n);var s=r(2556);function t(e){const n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r,{name:"brew-js-react"}),"\n",(0,s.jsx)(n.h1,{children:"Lazy evaluated string"}),"\n",(0,s.jsx)(n.p,{children:"In same occasion, a will-be-translated string has to be passed to another function or component in advance of rendering. The language when rendered may be changed aftwards."}),"\n",(0,s.jsxs)(n.p,{children:["The such case, use ",(0,s.jsx)(n.code,{children:"translate.lazy"})," or ",(0,s.jsx)(n.code,{children:"t.lazy"})," from ",(0,s.jsx)(n.code,{children:"useTranslation"})," hook."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"/// Component.tsx\r\nimport { translate } from \"i18n\";\r\n\r\nconst text = translate.lazy('prefix.key');\r\n\r\nfunction Component() {\r\n    useLanguage();\r\n    return <div>{String(text)}</div>;\r\n}\r\n\r\n/// i18n.ts\r\nconst resources = {\r\n    // first level are languages\r\n    en: {\r\n        // second level are prefixes\r\n        prefix: { key: 'Translation string' }\r\n    },\r\n    de: {\r\n        prefix: { key: '\xdcbersetzungszeichenfolge' }\r\n    }\r\n};\r\n\r\nconst { translate, useTranslation } = makeTranslation(resources, 'en');\n"})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(t,e)})):t(e)}}}]);