"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[1078],{1078:function(e,n,r){r.r(n);var o=r(2556);function t(e){const n=Object.assign({h1:"h1",p:"p",blockquote:"blockquote",a:"a",code:"code",pre:"pre"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r,{name:"brew-js-react"}),"\n",(0,o.jsx)(n.h1,{children:"View context"}),"\n",(0,o.jsx)(n.p,{children:"View context allow child components to retrieve information on the current rendering view."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["For view component, view context can be directly accessed by ",(0,o.jsx)(n.a,{href:":",children:(0,o.jsx)(n.code,{children:"ViewProps.viewContext"})}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"It is useful if a shared component needs to behave differently on different view."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"function Suggestion() {\r\n    const { view } = useViewContext();\r\n\r\n    if (view === ProductInfo) {\r\n        /* ... */\r\n    } else {\r\n        /* ... */\r\n    }\r\n}\n"})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(t,e)})):t(e)}}}]);