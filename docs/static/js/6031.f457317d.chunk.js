"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[6031],{6031:function(e,s,n){n.r(s);var r=n(2556);function i(e){const s=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",h4:"h4",blockquote:"blockquote",a:"a"},e.components),{Module:n,ImportHint:i,MemberList:c}=s;return i||l("ImportHint",!0),c||l("MemberList",!0),n||l("Module",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n,{name:"brew-js-react"}),"\n",(0,r.jsx)(s.h1,{children:"ClassNameToggleMixin"}),"\n",(0,r.jsx)(s.p,{children:"Controls the presence of specified CSS classes on applied elements\r\nwithout re-rendering the host component."}),"\n",(0,r.jsx)(s.h2,{children:"Syntax"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-javascript",children:"useClassNameToggleMixin(dict)\n"})}),"\n",(0,r.jsx)(i,{name:"useClassNameToggleMixin",module:"brew-js-react",require:"useClassNameToggleMixin",global:"brew.react.useClassNameToggleMixin"}),"\n",(0,r.jsx)(s.h3,{children:"Parameters"}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsx)(s.h4,{children:(0,r.jsx)(s.code,{children:"dict"})}),(0,r.jsx)(s.p,{children:"A dictionary specifying CSS classes to be initially added."})]}),"\n",(0,r.jsx)(s.h2,{children:"ClassNameToggleMixin class"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:["Mixin should be created using ",(0,r.jsx)(s.a,{href:":",children:(0,r.jsx)(s.code,{children:"useClassNameToggleMixin"})})," and applied to element by ",(0,r.jsx)(s.code,{children:"Mixin.use"}),"."]}),"\n"]}),"\n",(0,r.jsx)(c,{i:"ClassNameToggleMixin",extends:["StatefulMixin"],im:["set()"]}),"\n",(0,r.jsx)(s.h3,{children:(0,r.jsx)(s.code,{children:"ClassNameToggleMixin.set()"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-javascript",children:"set(name, value)\r\nset(values)\n"})}),"\n",(0,r.jsx)(s.p,{children:"Toggles specified CSS classes on elements."}),"\n",(0,r.jsx)(s.h3,{children:"Parameters"}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsx)(s.h4,{children:(0,r.jsx)(s.code,{children:"name"})}),(0,r.jsx)(s.p,{children:"A CSS class."}),(0,r.jsx)(s.h4,{children:(0,r.jsx)(s.code,{children:"values"})}),(0,r.jsx)(s.p,{children:"A dictionary which each entry represents whether the CSS class will be added to or remove from elements."}),(0,r.jsx)(s.h4,{children:(0,r.jsx)(s.code,{children:"value"})}),(0,r.jsxs)(s.p,{children:["A boolean that the CSS class is added to elements when ",(0,r.jsx)(s.code,{children:"true"}),"; or removed from elements when ",(0,r.jsx)(s.code,{children:"false"}),"."]})]})]})}function l(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=function(e={}){const{wrapper:s}=e.components||{};return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(i,e)})):i(e)}}}]);