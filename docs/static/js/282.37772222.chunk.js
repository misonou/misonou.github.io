"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[282],{282:function(n,e,r){r.r(e);var t=r(2556),o=r(5776);function i(n){const e=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre",a:"a",h3:"h3"},n.components),{Module:r,MemberList:i,Badge:s}=e;return s||a("Badge",!1),s.ReadOnly||a("Badge.ReadOnly",!0),i||a("MemberList",!0),r||a("Module",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r,{name:"brew-js-react"}),"\n",(0,t.jsx)(e.h1,{children:"LoadingStateMixin"}),"\n",(0,t.jsxs)(e.p,{children:["Adds ",(0,t.jsx)(e.code,{children:"loading"})," CSS class to applied elements, when asynchronous operation is notified\r\nthrough ",(0,t.jsx)(e.code,{children:"notifyAsync"})," for any descendent elements. The ",(0,t.jsx)(e.code,{children:"asyncStart"})," and ",(0,t.jsx)(e.code,{children:"asyncEnd"})," events are also enabled on the applied elements."]}),"\n",(0,t.jsx)(o.Z,{}),"\n",(0,t.jsx)(e.h2,{children:"Syntax"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"useFocusStateMixin()\n"})}),"\n",(0,t.jsx)(e.h2,{children:"LoadingStateMixin class"}),"\n",(0,t.jsxs)(e.p,{children:["Mixin should be created using ",(0,t.jsx)(e.a,{href:":",children:(0,t.jsx)(e.code,{children:"useLoadingStateMixin"})})," and applied to element by ",(0,t.jsx)(e.code,{children:"Mixin.use"}),"."]}),"\n",(0,t.jsx)(i,{i:"LoadingStateMixin",extends:["ClassNameMixin"],ip:["loading"]}),"\n",(0,t.jsx)(e.h2,{children:"Instance properties"}),"\n",(0,t.jsxs)(e.h3,{children:[(0,t.jsx)(e.code,{children:"LoadingStateMixin.loading"})," ",(0,t.jsx)(s.ReadOnly,{})]}),"\n",(0,t.jsx)(e.p,{children:"Whether any operations are in progress associated to applied element."})]})}function a(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n={}){const{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(i,n)})):i(n)}},5776:function(n,e,r){r.d(e,{Z:function(){return g}});var t=r(2556),o=r(4855),i=r(8252),a=r(1266),s=r(9239),c=r(7749),d=function(){return d=Object.assign||function(n){for(var e,r=1,t=arguments.length;r<t;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n},d.apply(this,arguments)};function l(){return(0,c.gw)(3e3)}function u(){var n=(0,o.vS)(),e=(0,a.hy)(n,"loading");return(0,t.jsx)("div",d({id:"demo-wujq5"},i.Z.use(n),{children:e?(0,t.jsx)("button",d({onClick:function(n){return(0,s.Ei)(n.currentTarget.parentElement)}},{children:"Cancel"})):(0,t.jsx)("button",d({onClick:function(n){return(0,s.eH)(n.currentTarget,l)}},{children:"Start"}))}))}var p='import { Mixin, useLoadingStateMixin } from "brew-js-react";\r\nimport { useObservableProperty } from "zeta-dom-react";\r\nimport { cancelLock, runAsync } from "zeta-dom/domLock";\r\nimport { delay } from "zeta-dom/util";\r\n\r\nfunction doLongOperation() {\r\n    return delay(3000);\r\n}\r\n\r\nexport default function Component() {\r\n    const loadingState = useLoadingStateMixin();\r\n    const loading = useObservableProperty(loadingState, \'loading\');\r\n    return (\r\n        <div id="demo-wujq5" {...Mixin.use(loadingState)}>\r\n            {loading ?\r\n                <button onClick={e => cancelLock(e.currentTarget.parentElement!)}>\r\n                    Cancel\r\n                </button> :\r\n                <button onClick={e => runAsync(e.currentTarget, doLongOperation)}>\r\n                    Start\r\n                </button>}\r\n        </div>\r\n    );\r\n}\r\n',h="#demo-wujq5.loading:before {\r\n    position: absolute;\r\n    z-index: 1;\r\n    content: '';\r\n    top: 0;\r\n    left: 0;\r\n    border-bottom: 4px solid var(--color-highlight);\r\n    animation: loading-bar 1000s;\r\n}\r\n\r\n#demo-wujq5.loading-complete:before {\r\n    animation: none;\r\n    transition: right 0.2s, opacity 0.2s ease-out;\r\n    right: 0;\r\n    opacity: 0;\r\n}\r\n",x=r(9596);function g(){return(0,t.jsx)(x.iV,{component:u,source:{tsx:p,css:h},title:"Loading effect using React mixin"})}}}]);