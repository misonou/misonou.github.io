"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[5380],{5380:function(e,n,r){r.r(n);var s=r(2556);function i(e){const n=Object.assign({h1:"h1",p:"p",code:"code",blockquote:"blockquote",h2:"h2",pre:"pre",h3:"h3",h4:"h4"},e.components),{Module:r,Badge:i}=n;return i||o("Badge",!1),i.Optional||o("Badge.Optional",!0),r||o("Module",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r,{name:"brew-js/extensions"}),"\n",(0,s.jsx)(n.h1,{children:"IdleTimeout extension"}),"\n",(0,s.jsx)(n.p,{children:"Enables idle detection."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"idle"})," event will be fired after a specified amount time without any user interaction."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.code,{children:"idle"})," event is handled with a promise, the count down will not be restarted\r\nuntil the promise is resolved. This prevents mulitple triggering of UI notifications."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"app.useIdleTimeout(options)\n"})}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"timeout"})}),(0,s.jsxs)(n.p,{children:["Number of milliseconds of idle period before ",(0,s.jsx)(n.code,{children:"idle"})," event is fired."]}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"crossFrame"})," ",(0,s.jsx)(i.Optional,{})]}),(0,s.jsx)(n.p,{children:"Whether user interaction is counted across multiple frames."}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"key"})," ",(0,s.jsx)(i.Optional,{})]}),(0,s.jsxs)(n.p,{children:["Storage key in local storage when ",(0,s.jsx)(n.code,{children:"crossFrame"})," option is enabled.\r\nDefault is ",(0,s.jsx)(n.code,{children:"app.lastInteract"}),"."]})]})]}),"\n",(0,s.jsx)(n.h2,{children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import brew from "brew-js";\r\nimport IdleTimeout from "brew-js/extension/idleTimeout";\r\n\r\nbrew.with(IdleTimeout)(app => {\r\n    app.useIdleTimeout({\r\n        timeout: 600000 /* 10 minutes */\r\n    });\r\n    app.on(\'idle\', e => {\r\n        // returns a promise that is resolved when user close the dialog\r\n        return openAlertDialog({ /* ... */ });\r\n    });\r\n});\n'})})]})}function o(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(i,e)})):i(e)}}}]);