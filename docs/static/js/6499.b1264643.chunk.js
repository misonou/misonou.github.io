"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[6499],{6499:function(n,e,r){r.r(e);var t=r(2556),o=r(3072);function s(n){const e=Object.assign({h1:"h1",del:"del",p:"p",a:"a",code:"code",h2:"h2",ul:"ul",li:"li"},n.components),{Module:r}=e;return r||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r,{name:"brew-js/extension/router"}),"\n",(0,t.jsxs)(e.h1,{children:["Snapshots ",(0,t.jsx)(e.del,{children:"0.4.9"})]}),"\n",(0,t.jsxs)(e.p,{children:["Snapshots can be taken for history storage by ",(0,t.jsx)(e.a,{href:":",children:(0,t.jsx)(e.code,{children:"app.snapshot()"})}),"."]}),"\n",(0,t.jsx)(e.p,{children:"When snapshot is taken, a new entry is pushed to browser history, where user can go back and forward."}),"\n",(0,t.jsxs)(e.p,{children:["Entries in current ",(0,t.jsx)(e.a,{href:":",children:(0,t.jsx)(e.code,{children:"app.historyStorage"})})," are cloned, and upon user navigation\r\nthe previous history storage will be restored."]}),"\n",(0,t.jsx)(e.h2,{children:"Example"}),"\n",(0,t.jsx)(o.Z,{}),"\n",(0,t.jsx)(e.h2,{children:"See also"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:":",children:(0,t.jsx)(e.code,{children:"app.snapshot"})})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:":",children:(0,t.jsx)(e.code,{children:"useRouteState"})})}),"\n"]})]})}e.default=function(n={}){const{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(s,n)})):s(n)}},3072:function(n,e,r){r.d(e,{Z:function(){return h}});var t=r(2556),o=r(6122),s=r(2192),i=r(9596),c=r(7194),a=function(){return a=Object.assign||function(n){for(var e,r=1,t=arguments.length;r<t;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n},a.apply(this,arguments)};function l(){var n=(0,o.n7)("example",1),e=n[0],r=n[1];return(0,t.jsxs)(s.Fm,a({columns:"1fr 1fr"},{children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("p",{children:"Current value is ".concat(e)}),(0,t.jsx)(s.zx,{label:"Increment",onClick:function(){return c.l.snapshot()&&r((function(n){return n+1}))}})]}),(0,t.jsx)(i.AZ,{source:JSON.stringify(c.l.historyStorage.current),language:"json"})]}))}var u='import { useRouteState } from "brew-js-react";\r\nimport { Button, FieldColumn } from "src/components/controls";\r\nimport { SyntaxHighlight } from "src/components/docs";\r\nimport { app } from "src/init";\r\n\r\nexport default function Component() {\r\n    // useRouteState will trigger component update\r\n    // when history storage is restored\r\n    const [value, setValue] = useRouteState(\'example\', 1);\r\n\r\n    return (\r\n        <FieldColumn columns="1fr 1fr">\r\n            <div>\r\n                <p>{`Current value is ${value}`}</p>\r\n                <Button\r\n                    label="Increment"\r\n                    onClick={() => app.snapshot() && setValue(v => v + 1)} />\r\n            </div>\r\n            <SyntaxHighlight\r\n                source={JSON.stringify(app.historyStorage.current)}\r\n                language="json" />\r\n        </FieldColumn>\r\n    );\r\n}\r\n';function h(){return(0,t.jsx)(i.iV,{component:l,source:{tsx:u}})}}}]);