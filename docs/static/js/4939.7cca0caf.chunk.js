"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[4939],{4939:function(e,n,r){r.r(n);var o=r(2556);function t(e){const n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",blockquote:"blockquote",a:"a",h2:"h2",h3:"h3"},e.components),{Module:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r,{name:"zeta-dom-react"}),"\n",(0,o.jsx)(n.h1,{children:"Forms"}),"\n",(0,o.jsxs)(n.p,{children:["The use of ",(0,o.jsx)(n.code,{children:"FormContext"})," and ",(0,o.jsx)(n.code,{children:"useFormField"})," hooks allows easy implementation of any kind of form controls with high customizability, with validations and field values access."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { Form, useFormContext } from "zeta-dom-react";\r\n\r\nfunction Login() {\r\n    const form = useFormContext();\r\n    return (\r\n        <Form context={form}>\r\n            <TextField name="username" required label="Username" />\r\n            <TextField name="password" required type="password" label="Password" />\r\n            <Button label="Login" onClick={() => login(form.data)} />\r\n        </Form>\r\n    );\r\n}\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["The library does not ship built-in field components. See ",(0,o.jsx)(n.a,{href:"/docs/react/form/building-form-controls",children:"Building form controls"})," for more information."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{children:"Examples"}),"\n",(0,o.jsx)(n.h3,{children:"To-do List"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'function ToDoList() {\r\n    const [items, setItems] = useState<string[]>([]);\r\n    const form = useFormContext();\r\n    return (\r\n        <Form context={form}>\r\n            <ul>\r\n                {items.map((v, i) => (<li key={i}>{v}</li>))}\r\n            </ul>\r\n            {/* TextField is a component using `useFormField` hooks */}\r\n            <TextField name="item" />\r\n            {/* value of the field "item" can be accessed through `form.data` */}\r\n            <button onClick={() => setItems([...items, form.data.item]) } />\r\n        </Form>\r\n    );\r\n}\n'})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(t,e)})):t(e)}}}]);
//# sourceMappingURL=4939.7cca0caf.chunk.js.map