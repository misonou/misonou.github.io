"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[8823],{8823:function(e,n,r){r.r(n);var s=r(2556);function i(e){const n=Object.assign({h1:"h1",p:"p",a:"a",code:"code",h2:"h2",pre:"pre",h3:"h3",h4:"h4",ul:"ul",li:"li"},e.components),{Module:r,Badge:i}=n;return i||d("Badge",!1),i.Optional||d("Badge.Optional",!0),r||d("Module",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r,{name:"zeta-dom-react"}),"\n",(0,s.jsx)(n.h1,{children:"useFormField hook"}),"\n",(0,s.jsxs)(n.p,{children:["Registers a field in the current ",(0,s.jsx)(n.a,{href:":",children:(0,s.jsx)(n.code,{children:"FormContext"})}),"."]}),"\n",(0,s.jsx)(n.h2,{children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"useFormField(props)\r\nuseFormField(props, defaultValue)\r\nuseFormField(fieldType, props)\r\nuseFormField(fieldType, props, defaultValue)\n"})}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)(n.h4,{children:(0,s.jsx)(n.code,{children:"props"})}),(0,s.jsxs)(n.p,{children:["An object with properties ",(0,s.jsx)(n.a,{href:":",children:(0,s.jsx)(n.code,{children:"FormFieldProps"})}),"."]}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"defaultValue"})," ",(0,s.jsx)(i.Optional,{})]}),(0,s.jsx)(n.p,{children:"Initial value if when the field component is mounted:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"value"})," is not set on ",(0,s.jsx)(n.code,{children:"props"})]}),"\n",(0,s.jsxs)(n.li,{children:["field is unnamed or value is not present in ",(0,s.jsx)(n.a,{href:":",children:(0,s.jsx)(n.code,{children:"FormContext.data"})}),"."]}),"\n"]}),(0,s.jsxs)(n.p,{children:["If this is not specified, and ",(0,s.jsx)(n.code,{children:"fieldType"})," is specified, ",(0,s.jsx)(n.code,{children:"defaultValue"})," on such field type is used."]}),(0,s.jsxs)(n.h4,{children:[(0,s.jsx)(n.code,{children:"fieldType"})," ",(0,s.jsx)(i.Optional,{})]}),(0,s.jsxs)(n.p,{children:["A field type constructor. See ",(0,s.jsx)(n.a,{href:"/docs/react/form/field-types",children:"Field types"}),"."]})]}),"\n",(0,s.jsx)(n.h3,{children:"Return value"}),"\n",(0,s.jsxs)(n.p,{children:["An object with ",(0,s.jsx)(n.a,{href:":",children:(0,s.jsx)(n.code,{children:"FormFieldState"})})," interface."]}),"\n",(0,s.jsx)(n.h2,{children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/react/form/field-types",children:"Field types"})}),"\n"]})]})}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(i,e)})):i(e)}}}]);