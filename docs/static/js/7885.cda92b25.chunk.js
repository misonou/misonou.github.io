"use strict";(self.webpackChunkbrewjs_for_react_router_example=self.webpackChunkbrewjs_for_react_router_example||[]).push([[7885],{7885:function(e,n,t){t.r(n);var c=t(2556);function s(e){const n=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",h4:"h4",blockquote:"blockquote"},e.components),{Module:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Module",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t,{name:"zeta-dom/observe"}),"\n",(0,c.jsx)(n.h1,{children:"watchOwnAttributes"}),"\n",(0,c.jsx)(n.p,{children:"Registers a callback to be fired when specified attributes of the givne element has changed."}),"\n",(0,c.jsx)(n.h2,{children:"Syntax"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"watchOwnAttributes(element, attributes, callback)\n"})}),"\n",(0,c.jsx)(n.h3,{children:"Parameters"}),"\n",(0,c.jsxs)("dl",{children:[(0,c.jsx)(n.h4,{children:(0,c.jsx)(n.code,{children:"element"})}),(0,c.jsx)(n.p,{children:"A DOM element to observe."}),(0,c.jsx)(n.h4,{children:(0,c.jsx)(n.code,{children:"attributes"})}),(0,c.jsx)(n.p,{children:"A string or a list of string specifying attributes to observe."}),(0,c.jsx)(n.h4,{children:(0,c.jsx)(n.code,{children:"callback"})}),(0,c.jsx)(n.p,{children:"A callback to be fired when mutation occurs."})]}),"\n",(0,c.jsx)(n.h3,{children:"Return value"}),"\n",(0,c.jsx)(n.p,{children:"A callback which collects mutation immediately and fires mutation handler if there is any mutations."}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["The callback has an additional property ",(0,c.jsx)(n.code,{children:"dispose"})," that will disconnect the mutation observer."]}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"const collectChanges = watchOwnAttributes(element, ['class'], callback);\r\ncollectChanges.dispose();\n"})})]})}n.default=function(e={}){const{wrapper:n}=e.components||{};return n?(0,c.jsx)(n,Object.assign({},e,{children:(0,c.jsx)(s,e)})):s(e)}}}]);